{"id":"bfd5a4df9b33ea8a9fe619c9dd15d68d","_format":"hh-sol-build-info-1","solcVersion":"0.8.1","solcLongVersion":"0.8.1+commit.df193b15","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/ERC20Staking.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract ERC20Staking is Ownable {\n    using SafeMath for uint256;\n\n    // ERC20 token to be staked\n    IERC20 public stakingToken;\n\n    // Reward rate per second\n    uint256 public rewardRate;\n\n    // Staking period in seconds\n    uint256 public stakingPeriod;\n\n    // Information about each stake\n    struct Stake {\n        uint256 amount;\n        uint256 startTime;\n        bool withdrawn;\n    }\n\n    // Mapping of user address to their stake\n    mapping(address => Stake) public stakes;\n\n    // Events\n    event Staked(address indexed user, uint256 amount, uint256 startTime);\n    event Withdrawn(address indexed user, uint256 amount, uint256 reward);\n\n    // Constructor\n    constructor(IERC20 _stakingToken, uint256 _rewardRate, uint256 _stakingPeriod) {\n        stakingToken = _stakingToken;\n        rewardRate = _rewardRate;\n        stakingPeriod = _stakingPeriod;\n    }\n\n    // Function to stake tokens\n    function stake(uint256 _amount) external {\n        require(_amount > 0, \"Amount must be greater than 0\");\n        require(stakingToken.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\");\n\n        Stake storage stake = stakes[msg.sender];\n        require(stake.amount == 0, \"Already staking\");\n\n        stake.amount = _amount;\n        stake.startTime = block.timestamp;\n        stake.withdrawn = false;\n\n        emit Staked(msg.sender, _amount, stake.startTime);\n    }\n\n    // Function to withdraw staked tokens and rewards\n    function withdraw() external {\n        Stake storage stake = stakes[msg.sender];\n        require(stake.amount > 0, \"No stake found\");\n        require(!stake.withdrawn, \"Already withdrawn\");\n        require(block.timestamp >= stake.startTime + stakingPeriod, \"Staking period not yet ended\");\n\n        uint256 reward = calculateReward(msg.sender);\n        uint256 totalAmount = stake.amount.add(reward);\n\n        stake.withdrawn = true;\n\n        require(stakingToken.transfer(msg.sender, stake.amount), \"Transfer failed\");\n        require(stakingToken.transfer(msg.sender, reward), \"Reward transfer failed\");\n\n        emit Withdrawn(msg.sender, stake.amount, reward);\n    }\n\n    // Function to calculate reward based on staking duration\n    function calculateReward(address _user) public view returns (uint256) {\n        Stake memory stake = stakes[_user];\n        if (stake.amount == 0 || block.timestamp < stake.startTime + stakingPeriod) {\n            return 0;\n        }\n        uint256 stakingDuration = block.timestamp.sub(stake.startTime);\n        return stake.amount.mul(rewardRate).mul(stakingDuration).div(1e18); // assuming rewardRate is in 1e18\n    }\n\n    // Function to set reward rate\n    function setRewardRate(uint256 _rewardRate) external onlyOwner {\n        rewardRate = _rewardRate;\n    }\n\n    // Function to set staking period\n    function setStakingPeriod(uint256 _stakingPeriod) external onlyOwner {\n        stakingPeriod = _stakingPeriod;\n    }\n\n    // Function to withdraw contract balance (not used in this case, but available)\n    function withdrawContractBalance() external onlyOwner {\n        payable(owner()).transfer(address(this).balance);\n    }\n}\n"},"contracts/EthStaking.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.1;\n\ncontract EtherStaking {\n    struct Stake {\n        uint256 amount;\n        uint256 startTime;\n        bool withdrawn;\n    }\n\n    mapping(address => Stake) public stakes;\n    uint256 public rewardRate;\n    uint256 public stakingPeriod;\n    address public owner;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not the owner\");\n        _;\n    }\n\n    event Staked(address indexed user, uint256 amount, uint256 time);\n    event Withdrawn(address indexed user, uint256 amount, uint256 reward);\n\n    constructor(uint256 _rewardRate, uint256 _stakingPeriod) {\n        require(_rewardRate > 0, \"Reward rate must be greater than 0\");\n        require(_stakingPeriod > 0, \"Staking period must be greater than 0\");\n        rewardRate = _rewardRate;\n        stakingPeriod = _stakingPeriod;\n        owner = msg.sender;\n    }\n\n    function stakeEther() external payable {\n        require(msg.value > 0, \"Stake amount must be greater than 0\");\n        require(stakes[msg.sender].amount == 0, \"Already staking\");\n\n        stakes[msg.sender] = Stake({\n            amount: msg.value,\n            startTime: block.timestamp,\n            withdrawn: false\n        });\n\n        emit Staked(msg.sender, msg.value, block.timestamp);\n    }\n\n    function calculateReward(address staker) public view returns (uint256) {\n        Stake storage stakeInfo = stakes[staker];\n        require(stakeInfo.amount > 0, \"No stake found\");\n\n        uint256 stakingDuration = block.timestamp - stakeInfo.startTime;\n        uint256 reward = 0;\n\n        if (stakingDuration >= stakingPeriod) {\n            reward = (stakeInfo.amount * rewardRate * stakingDuration) / (stakingPeriod * 100);\n        }\n\n        return reward;\n    }\n\n    function withdraw() external {\n        Stake storage stakeInfo = stakes[msg.sender];\n        require(stakeInfo.amount > 0, \"No stake found\");\n        require(!stakeInfo.withdrawn, \"Already withdrawn\");\n        require(block.timestamp >= stakeInfo.startTime + stakingPeriod, \"Staking period not yet ended\");\n\n        uint256 reward = calculateReward(msg.sender);\n        uint256 totalAmount = stakeInfo.amount + reward;\n\n        stakeInfo.withdrawn = true;\n        payable(msg.sender).transfer(totalAmount);\n\n        emit Withdrawn(msg.sender, stakeInfo.amount, reward);\n    }\n\n    function withdrawContractBalance() external onlyOwner {\n        payable(owner).transfer(address(this).balance);\n    }\n\n    function setRewardRate(uint256 _rewardRate) external onlyOwner {\n        rewardRate = _rewardRate;\n    }\n\n    function setStakingPeriod(uint256 _stakingPeriod) external onlyOwner {\n        stakingPeriod = _stakingPeriod;\n    }\n\n    receive() external payable {}\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"8760","formattedMessage":"Warning: This declaration has the same name as another declaration.\n  --> contracts/ERC20Staking.sol:46:9:\n   |\n46 |         Stake storage stake = stakes[msg.sender];\n   |         ^^^^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> contracts/ERC20Staking.sol:42:5:\n   |\n42 |     function stake(uint256 _amount) external {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration has the same name as another declaration.","secondarySourceLocations":[{"end":1627,"file":"contracts/ERC20Staking.sol","message":"The other declaration is here:","start":1142}],"severity":"warning","sourceLocation":{"end":1375,"file":"contracts/ERC20Staking.sol","start":1356},"type":"Warning"},{"component":"general","errorCode":"8760","formattedMessage":"Warning: This declaration has the same name as another declaration.\n  --> contracts/ERC20Staking.sol:58:9:\n   |\n58 |         Stake storage stake = stakes[msg.sender];\n   |         ^^^^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> contracts/ERC20Staking.sol:42:5:\n   |\n42 |     function stake(uint256 _amount) external {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration has the same name as another declaration.","secondarySourceLocations":[{"end":1627,"file":"contracts/ERC20Staking.sol","message":"The other declaration is here:","start":1142}],"severity":"warning","sourceLocation":{"end":1745,"file":"contracts/ERC20Staking.sol","start":1726},"type":"Warning"},{"component":"general","errorCode":"8760","formattedMessage":"Warning: This declaration has the same name as another declaration.\n  --> contracts/ERC20Staking.sol:76:9:\n   |\n76 |         Stake memory stake = stakes[_user];\n   |         ^^^^^^^^^^^^^^^^^^\nNote: The other declaration is here:\n  --> contracts/ERC20Staking.sol:42:5:\n   |\n42 |     function stake(uint256 _amount) external {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration has the same name as another declaration.","secondarySourceLocations":[{"end":1627,"file":"contracts/ERC20Staking.sol","message":"The other declaration is here:","start":1142}],"severity":"warning","sourceLocation":{"end":2524,"file":"contracts/ERC20Staking.sol","start":2506},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/ERC20Staking.sol:64:9:\n   |\n64 |         uint256 totalAmount = stake.amount.add(reward);\n   |         ^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":2060,"file":"contracts/ERC20Staking.sol","start":2041},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[220],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nodeType":"ImportDirective","scope":113,"sourceUnit":221,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":220,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[220],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,220],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0"}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":124,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":124,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":124,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":124,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":133,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":133,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":133,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":133,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":139,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":139,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":190,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":147,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":147,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":147,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":190,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":157,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":157,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":157,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":157,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":190,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":167,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":167,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":167,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":190,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":177,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":177,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":177,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":174,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":190,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":189,"src":"2668:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":189,"src":"2682:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":189,"src":"2694:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":189,"src":"2728:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:1"},"scope":190,"src":"2646:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"202:2534:1"}],"src":"106:2631:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[220]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:2"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"126:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":220,"linearizedBaseContracts":[220],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":201,"nodeType":"Block","src":"717:34:2","statements":[{"expression":{"expression":{"id":198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"734:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":197,"id":200,"nodeType":"Return","src":"727:17:2"}]},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"674:2:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":202,"src":"708:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:2"},"scope":220,"src":"655:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":210,"nodeType":"Block","src":"824:32:2","statements":[{"expression":{"expression":{"id":207,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"841:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":206,"id":209,"nodeType":"Return","src":"834:15:2"}]},"id":211,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"774:2:2"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":211,"src":"808:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":204,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:2"},"scope":220,"src":"757:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"934:25:2","statements":[{"expression":{"hexValue":"30","id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":215,"id":217,"nodeType":"Return","src":"944:8:2"}]},"id":219,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"891:2:2"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":219,"src":"925:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:2"},"scope":220,"src":"862:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":221,"src":"623:338:2"}],"src":"101:861:2"},"id":2},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[532]},"id":533,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"285:196:3","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":532,"linearizedBaseContracts":[532],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":254,"nodeType":"Block","src":"717:140:3","statements":[{"id":253,"nodeType":"UncheckedBlock","src":"727:124:3","statements":[{"assignments":[236],"declarations":[{"constant":false,"id":236,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":253,"src":"751:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":240,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"763:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"767:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"786:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"790:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":248,"nodeType":"IfStatement","src":"782:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":234,"id":247,"nodeType":"Return","src":"793:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":250,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"838:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":234,"id":252,"nodeType":"Return","src":"824:16:3"}]}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"505:131:3","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":255,"src":"657:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":255,"src":"668:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:3"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":255,"src":"702:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":230,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":255,"src":"708:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:3"},"scope":532,"src":"641:216:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"1078:113:3","statements":[{"id":281,"nodeType":"UncheckedBlock","src":"1088:97:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":267,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"1116:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":268,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"1120:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":274,"nodeType":"IfStatement","src":"1112:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":266,"id":273,"nodeType":"Return","src":"1123:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"1168:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"1172:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":266,"id":280,"nodeType":"Return","src":"1154:20:3"}]}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"863:134:3","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":283,"src":"1018:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":283,"src":"1029:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:3"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":283,"src":"1063:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":283,"src":"1069:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:3"},"scope":532,"src":"1002:189:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"1415:417:3","statements":[{"id":323,"nodeType":"UncheckedBlock","src":"1425:401:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1683:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":302,"nodeType":"IfStatement","src":"1679:28:3","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":294,"id":301,"nodeType":"Return","src":"1691:16:3"}},{"assignments":[304],"declarations":[{"constant":false,"id":304,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":323,"src":"1721:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":308,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1733:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":306,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"1737:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":309,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1756:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":310,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1760:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"1765:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":318,"nodeType":"IfStatement","src":"1752:33:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":294,"id":317,"nodeType":"Return","src":"1768:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":320,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1813:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":294,"id":322,"nodeType":"Return","src":"1799:16:3"}]}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"1197:137:3","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":325,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":325,"src":"1355:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":325,"src":"1366:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:3"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":325,"src":"1400:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":290,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":293,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":325,"src":"1406:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:3"},"scope":532,"src":"1339:493:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":352,"nodeType":"Block","src":"2057:114:3","statements":[{"id":351,"nodeType":"UncheckedBlock","src":"2067:98:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":337,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"2095:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":344,"nodeType":"IfStatement","src":"2091:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":336,"id":343,"nodeType":"Return","src":"2103:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"2148:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":347,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"2152:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":336,"id":350,"nodeType":"Return","src":"2134:20:3"}]}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"1838:138:3","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":353,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":353,"src":"1997:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":353,"src":"2008:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:3"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":353,"src":"2042:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":332,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":353,"src":"2048:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:3"},"scope":532,"src":"1981:190:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":380,"nodeType":"Block","src":"2406:114:3","statements":[{"id":379,"nodeType":"UncheckedBlock","src":"2416:98:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"2444:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":372,"nodeType":"IfStatement","src":"2440:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":364,"id":371,"nodeType":"Return","src":"2452:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"2497:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":375,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"2501:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":364,"id":378,"nodeType":"Return","src":"2483:20:3"}]}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2177:148:3","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":381,"src":"2346:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":381,"src":"2357:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:3"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":381,"src":"2391:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":360,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":381,"src":"2397:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:3"},"scope":532,"src":"2330:190:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":395,"nodeType":"Block","src":"2822:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2839:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2843:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":390,"id":394,"nodeType":"Return","src":"2832:12:3"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"2526:224:3","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":396,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":396,"src":"2768:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":396,"src":"2779:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:3"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":396,"src":"2813:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:3"},"scope":532,"src":"2755:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":410,"nodeType":"Block","src":"3189:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"3206:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3210:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":405,"id":409,"nodeType":"Return","src":"3199:12:3"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"2857:260:3","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":411,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":411,"src":"3135:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":411,"src":"3146:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:3"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":411,"src":"3180:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:3"},"scope":532,"src":"3122:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":425,"nodeType":"Block","src":"3532:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3549:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":422,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3553:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"3542:12:3"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"3224:236:3","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":426,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":426,"src":"3478:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":426,"src":"3489:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:3"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":426,"src":"3523:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:3"},"scope":532,"src":"3465:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":440,"nodeType":"Block","src":"3917:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"3934:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":437,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"3938:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":435,"id":439,"nodeType":"Return","src":"3927:12:3"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3567:278:3","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":441,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":441,"src":"3863:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":441,"src":"3874:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:3"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":441,"src":"3908:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:3"},"scope":532,"src":"3850:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":455,"nodeType":"Block","src":"4466:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"4483:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":452,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4487:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":450,"id":454,"nodeType":"Return","src":"4476:12:3"}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"3952:442:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":456,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":456,"src":"4412:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":456,"src":"4423:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:3"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":456,"src":"4457:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:3"},"scope":532,"src":"4399:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":480,"nodeType":"Block","src":"5054:106:3","statements":[{"id":479,"nodeType":"UncheckedBlock","src":"5064:90:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":469,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"5096:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5101:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":472,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"5104:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5088:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"5088:29:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5138:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":476,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"5142:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":467,"id":478,"nodeType":"Return","src":"5131:12:3"}]}]},"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"4501:453:3","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":481,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":481,"src":"4972:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":481,"src":"4983:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":481,"src":"4994:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":462,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:3"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":481,"src":"5045:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:3"},"scope":532,"src":"4959:201:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":505,"nodeType":"Block","src":"5739:105:3","statements":[{"id":504,"nodeType":"UncheckedBlock","src":"5749:89:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":494,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5781:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":497,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"5788:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"5773:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"5822:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":501,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"5826:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":492,"id":503,"nodeType":"Return","src":"5815:12:3"}]}]},"documentation":{"id":482,"nodeType":"StructuredDocumentation","src":"5166:473:3","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":506,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":506,"src":"5657:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":486,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":506,"src":"5668:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":506,"src":"5679:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":487,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:3"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":506,"src":"5730:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:3"},"scope":532,"src":"5644:200:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":530,"nodeType":"Block","src":"6585:105:3","statements":[{"id":529,"nodeType":"UncheckedBlock","src":"6595:89:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6627:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":522,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"6634:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6619:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"6619:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6668:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":526,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6672:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":517,"id":528,"nodeType":"Return","src":"6661:12:3"}]}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"5850:635:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":531,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":531,"src":"6503:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":531,"src":"6514:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":531,"src":"6525:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":512,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:3"},"returnParameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":531,"src":"6576:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:3"},"scope":532,"src":"6490:200:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":533,"src":"482:6210:3"}],"src":"107:6586:3"},"id":3},"contracts/ERC20Staking.sol":{"ast":{"absolutePath":"contracts/ERC20Staking.sol","exportedSymbols":{"Context":[220],"ERC20Staking":[854],"IERC20":[190],"Ownable":[112],"SafeMath":[532]},"id":855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":534,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":535,"nodeType":"ImportDirective","scope":855,"sourceUnit":191,"src":"57:56:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":536,"nodeType":"ImportDirective","scope":855,"sourceUnit":113,"src":"114:52:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":537,"nodeType":"ImportDirective","scope":855,"sourceUnit":533,"src":"167:57:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":538,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"251:7:4"},"id":539,"nodeType":"InheritanceSpecifier","src":"251:7:4"}],"contractDependencies":[112,220],"contractKind":"contract","fullyImplemented":true,"id":854,"linearizedBaseContracts":[854,112,220],"name":"ERC20Staking","nodeType":"ContractDefinition","nodes":[{"id":542,"libraryName":{"id":540,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":532,"src":"271:8:4"},"nodeType":"UsingForDirective","src":"265:27:4","typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"284:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"72f702f3","id":545,"mutability":"mutable","name":"stakingToken","nodeType":"VariableDeclaration","scope":854,"src":"330:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":544,"nodeType":"UserDefinedTypeName","pathNode":{"id":543,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"330:6:4"},"referencedDeclaration":190,"src":"330:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"7b0a47ee","id":547,"mutability":"mutable","name":"rewardRate","nodeType":"VariableDeclaration","scope":854,"src":"393:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"393:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c03d5b47","id":549,"mutability":"mutable","name":"stakingPeriod","nodeType":"VariableDeclaration","scope":854,"src":"458:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"ERC20Staking.Stake","id":556,"members":[{"constant":false,"id":551,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":556,"src":"552:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"startTime","nodeType":"VariableDeclaration","scope":556,"src":"576:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"576:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"withdrawn","nodeType":"VariableDeclaration","scope":556,"src":"603:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":554,"name":"bool","nodeType":"ElementaryTypeName","src":"603:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Stake","nodeType":"StructDefinition","scope":854,"src":"529:95:4","visibility":"public"},{"constant":false,"functionSelector":"16934fc4","id":561,"mutability":"mutable","name":"stakes","nodeType":"VariableDeclaration","scope":854,"src":"676:39:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$556_storage_$","typeString":"mapping(address => struct ERC20Staking.Stake)"},"typeName":{"id":560,"keyType":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"676:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$556_storage_$","typeString":"mapping(address => struct ERC20Staking.Stake)"},"valueType":{"id":559,"nodeType":"UserDefinedTypeName","pathNode":{"id":558,"name":"Stake","nodeType":"IdentifierPath","referencedDeclaration":556,"src":"695:5:4"},"referencedDeclaration":556,"src":"695:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake"}}},"visibility":"public"},{"anonymous":false,"id":569,"name":"Staked","nodeType":"EventDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":569,"src":"749:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":565,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":569,"src":"771:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":567,"indexed":false,"mutability":"mutable","name":"startTime","nodeType":"VariableDeclaration","scope":569,"src":"787:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"748:57:4"},"src":"736:70:4"},{"anonymous":false,"id":577,"name":"Withdrawn","nodeType":"EventDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":577,"src":"827:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":573,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":577,"src":"849:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":575,"indexed":false,"mutability":"mutable","name":"reward","nodeType":"VariableDeclaration","scope":577,"src":"865:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"826:54:4"},"src":"811:70:4"},{"body":{"id":599,"nodeType":"Block","src":"985:119:4","statements":[{"expression":{"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":587,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"995:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":588,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"1010:13:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"src":"995:28:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":590,"nodeType":"ExpressionStatement","src":"995:28:4"},{"expression":{"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":591,"name":"rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"1033:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":592,"name":"_rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"1046:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1033:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":594,"nodeType":"ExpressionStatement","src":"1033:24:4"},{"expression":{"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":595,"name":"stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1067:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":596,"name":"_stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"1083:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1067:30:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":598,"nodeType":"ExpressionStatement","src":"1067:30:4"}]},"id":600,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"_stakingToken","nodeType":"VariableDeclaration","scope":600,"src":"918:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"},"typeName":{"id":579,"nodeType":"UserDefinedTypeName","pathNode":{"id":578,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"918:6:4"},"referencedDeclaration":190,"src":"918:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"_rewardRate","nodeType":"VariableDeclaration","scope":600,"src":"940:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"940:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"_stakingPeriod","nodeType":"VariableDeclaration","scope":600,"src":"961:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"917:67:4"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"985:0:4"},"scope":854,"src":"906:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":669,"nodeType":"Block","src":"1183:444:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":606,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"1201:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1211:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1201:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1214:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1193:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1193:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"1193:53:4"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":615,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1290:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1290:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":619,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1310:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Staking_$854","typeString":"contract ERC20Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Staking_$854","typeString":"contract ERC20Staking"}],"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1302:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"1302:7:4","typeDescriptions":{}}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1302:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"1317:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":613,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"1264:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":189,"src":"1264:25:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1264:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1327:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1256:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1256:89:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"ExpressionStatement","src":"1256:89:4"},{"assignments":[628],"declarations":[{"constant":false,"id":628,"mutability":"mutable","name":"stake","nodeType":"VariableDeclaration","scope":669,"src":"1356:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake"},"typeName":{"id":627,"nodeType":"UserDefinedTypeName","pathNode":{"id":626,"name":"Stake","nodeType":"IdentifierPath","referencedDeclaration":556,"src":"1356:5:4"},"referencedDeclaration":556,"src":"1356:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake"}},"visibility":"internal"}],"id":633,"initialValue":{"baseExpression":{"id":629,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"1378:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$556_storage_$","typeString":"mapping(address => struct ERC20Staking.Stake storage ref)"}},"id":632,"indexExpression":{"expression":{"id":630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1385:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1385:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1378:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage","typeString":"struct ERC20Staking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1356:40:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":635,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1414:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":551,"src":"1414:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1430:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1414:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207374616b696e67","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1433:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe","typeString":"literal_string \"Already staking\""},"value":"Already staking"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe","typeString":"literal_string \"Already staking\""}],"id":634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1406:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1406:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"1406:45:4"},{"expression":{"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":642,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1462:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":551,"src":"1462:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":645,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"1477:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1462:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":647,"nodeType":"ExpressionStatement","src":"1462:22:4"},{"expression":{"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":648,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1494:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":553,"src":"1494:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":651,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1512:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1512:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1494:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":654,"nodeType":"ExpressionStatement","src":"1494:33:4"},{"expression":{"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":655,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1537:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"withdrawn","nodeType":"MemberAccess","referencedDeclaration":555,"src":"1537:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1555:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1537:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"ExpressionStatement","src":"1537:23:4"},{"eventCall":{"arguments":[{"expression":{"id":662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1583:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1583:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":664,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"1595:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":665,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1604:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":553,"src":"1604:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":661,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"1576:6:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1576:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"EmitStatement","src":"1571:49:4"}]},"functionSelector":"a694fc3a","id":670,"implemented":true,"kind":"function","modifiers":[],"name":"stake","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","scope":670,"src":"1157:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:17:4"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"1183:0:4"},"scope":854,"src":"1142:485:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":757,"nodeType":"Block","src":"1716:642:4","statements":[{"assignments":[675],"declarations":[{"constant":false,"id":675,"mutability":"mutable","name":"stake","nodeType":"VariableDeclaration","scope":757,"src":"1726:19:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake"},"typeName":{"id":674,"nodeType":"UserDefinedTypeName","pathNode":{"id":673,"name":"Stake","nodeType":"IdentifierPath","referencedDeclaration":556,"src":"1726:5:4"},"referencedDeclaration":556,"src":"1726:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake"}},"visibility":"internal"}],"id":680,"initialValue":{"baseExpression":{"id":676,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"1748:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$556_storage_$","typeString":"mapping(address => struct ERC20Staking.Stake storage ref)"}},"id":679,"indexExpression":{"expression":{"id":677,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1755:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1755:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1748:18:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage","typeString":"struct ERC20Staking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1726:40:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":682,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1784:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":551,"src":"1784:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1799:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1784:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207374616b6520666f756e64","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1802:16:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a","typeString":"literal_string \"No stake found\""},"value":"No stake found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a","typeString":"literal_string \"No stake found\""}],"id":681,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1776:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1776:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"1776:43:4"},{"expression":{"arguments":[{"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1837:16:4","subExpression":{"expression":{"id":690,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1838:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"withdrawn","nodeType":"MemberAccess","referencedDeclaration":555,"src":"1838:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792077697468647261776e","id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1855:19:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219","typeString":"literal_string \"Already withdrawn\""},"value":"Already withdrawn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219","typeString":"literal_string \"Already withdrawn\""}],"id":689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1829:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1829:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":695,"nodeType":"ExpressionStatement","src":"1829:46:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":697,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1893:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1893:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":699,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1912:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":553,"src":"1912:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":701,"name":"stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1930:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1912:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1893:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e6720706572696f64206e6f742079657420656e646564","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1945:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a3a3ee7f4716cabe57160cf7f169bc773b09ae4a404f7930dddf07f03d5251c","typeString":"literal_string \"Staking period not yet ended\""},"value":"Staking period not yet ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a3a3ee7f4716cabe57160cf7f169bc773b09ae4a404f7930dddf07f03d5251c","typeString":"literal_string \"Staking period not yet ended\""}],"id":696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1885:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1885:91:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"1885:91:4"},{"assignments":[708],"declarations":[{"constant":false,"id":708,"mutability":"mutable","name":"reward","nodeType":"VariableDeclaration","scope":757,"src":"1987:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1987:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":713,"initialValue":{"arguments":[{"expression":{"id":710,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2020:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2020:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":709,"name":"calculateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2004:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2004:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1987:44:4"},{"assignments":[715],"declarations":[{"constant":false,"id":715,"mutability":"mutable","name":"totalAmount","nodeType":"VariableDeclaration","scope":757,"src":"2041:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":721,"initialValue":{"arguments":[{"id":719,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2080:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":716,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2063:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":551,"src":"2063:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":396,"src":"2063:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2063:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2041:46:4"},{"expression":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":722,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2098:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"withdrawn","nodeType":"MemberAccess","referencedDeclaration":555,"src":"2098:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2116:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2098:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":727,"nodeType":"ExpressionStatement","src":"2098:22:4"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2161:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2161:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":733,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2173:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":551,"src":"2173:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":729,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"2139:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"2139:21:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2139:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2188:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2131:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2131:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"ExpressionStatement","src":"2131:75:4"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2246:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2246:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2258:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":740,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"2224:12:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$190","typeString":"contract IERC20"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":157,"src":"2224:21:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2224:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526577617264207472616e73666572206661696c6564","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2267:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce","typeString":"literal_string \"Reward transfer failed\""},"value":"Reward transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce","typeString":"literal_string \"Reward transfer failed\""}],"id":739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2216:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2216:76:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"ExpressionStatement","src":"2216:76:4"},{"eventCall":{"arguments":[{"expression":{"id":750,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2318:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2318:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":752,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"2330:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake storage pointer"}},"id":753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":551,"src":"2330:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":754,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2344:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":749,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"2308:9:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2308:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":756,"nodeType":"EmitStatement","src":"2303:48:4"}]},"functionSelector":"3ccfd60b","id":758,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"1704:2:4"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"1716:0:4"},"scope":854,"src":"1687:671:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":809,"nodeType":"Block","src":"2496:351:4","statements":[{"assignments":[767],"declarations":[{"constant":false,"id":767,"mutability":"mutable","name":"stake","nodeType":"VariableDeclaration","scope":809,"src":"2506:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_memory_ptr","typeString":"struct ERC20Staking.Stake"},"typeName":{"id":766,"nodeType":"UserDefinedTypeName","pathNode":{"id":765,"name":"Stake","nodeType":"IdentifierPath","referencedDeclaration":556,"src":"2506:5:4"},"referencedDeclaration":556,"src":"2506:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage_ptr","typeString":"struct ERC20Staking.Stake"}},"visibility":"internal"}],"id":771,"initialValue":{"baseExpression":{"id":768,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"2527:6:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$556_storage_$","typeString":"mapping(address => struct ERC20Staking.Stake storage ref)"}},"id":770,"indexExpression":{"id":769,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"2534:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2527:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_storage","typeString":"struct ERC20Staking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2506:34:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":772,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2554:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_memory_ptr","typeString":"struct ERC20Staking.Stake memory"}},"id":773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":551,"src":"2554:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2570:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2554:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":776,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2575:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2575:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":778,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2593:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_memory_ptr","typeString":"struct ERC20Staking.Stake memory"}},"id":779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":553,"src":"2593:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":780,"name":"stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2611:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2593:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2575:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2554:70:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":787,"nodeType":"IfStatement","src":"2550:109:4","trueBody":{"id":786,"nodeType":"Block","src":"2626:33:4","statements":[{"expression":{"hexValue":"30","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":764,"id":785,"nodeType":"Return","src":"2640:8:4"}]}},{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"stakingDuration","nodeType":"VariableDeclaration","scope":809,"src":"2668:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"2668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":796,"initialValue":{"arguments":[{"expression":{"id":793,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2714:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_memory_ptr","typeString":"struct ERC20Staking.Stake memory"}},"id":794,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":553,"src":"2714:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":790,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2694:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2694:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":411,"src":"2694:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2694:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2668:62:4"},{"expression":{"arguments":[{"hexValue":"31653138","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:4:4","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}],"expression":{"arguments":[{"id":803,"name":"stakingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"2780:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":800,"name":"rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"2764:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":797,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2747:5:4","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$556_memory_ptr","typeString":"struct ERC20Staking.Stake memory"}},"id":798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":551,"src":"2747:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":426,"src":"2747:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2747:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":426,"src":"2747:32:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2747:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":441,"src":"2747:53:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2747:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":764,"id":808,"nodeType":"Return","src":"2740:66:4"}]},"functionSelector":"d82e3962","id":810,"implemented":true,"kind":"function","modifiers":[],"name":"calculateReward","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"_user","nodeType":"VariableDeclaration","scope":810,"src":"2451:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"2451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2450:15:4"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":810,"src":"2487:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2486:9:4"},"scope":854,"src":"2426:421:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":821,"nodeType":"Block","src":"2951:41:4","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":817,"name":"rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"2961:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":818,"name":"_rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2974:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2961:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"2961:24:4"}]},"functionSelector":"9e447fc6","id":822,"implemented":true,"kind":"function","modifiers":[{"id":815,"modifierName":{"id":814,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2941:9:4"},"nodeType":"ModifierInvocation","src":"2941:9:4"}],"name":"setRewardRate","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"_rewardRate","nodeType":"VariableDeclaration","scope":822,"src":"2911:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2911:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2910:21:4"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"2951:0:4"},"scope":854,"src":"2888:104:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":833,"nodeType":"Block","src":"3105:47:4","statements":[{"expression":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":829,"name":"stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"3115:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":830,"name":"_stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"3131:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3115:30:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"nodeType":"ExpressionStatement","src":"3115:30:4"}]},"functionSelector":"957d7780","id":834,"implemented":true,"kind":"function","modifiers":[{"id":827,"modifierName":{"id":826,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3095:9:4"},"nodeType":"ModifierInvocation","src":"3095:9:4"}],"name":"setStakingPeriod","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"_stakingPeriod","nodeType":"VariableDeclaration","scope":834,"src":"3062:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"3062:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3061:24:4"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"3105:0:4"},"scope":854,"src":"3036:116:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":852,"nodeType":"Block","src":"3296:65:4","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":847,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3340:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Staking_$854","typeString":"contract ERC20Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Staking_$854","typeString":"contract ERC20Staking"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3332:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:4","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3332:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3332:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":841,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"3314:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3314:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3306:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"3306:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3306:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"3306:25:4","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3306:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"ExpressionStatement","src":"3306:48:4"}]},"functionSelector":"bfab3db9","id":853,"implemented":true,"kind":"function","modifiers":[{"id":837,"modifierName":{"id":836,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3286:9:4"},"nodeType":"ModifierInvocation","src":"3286:9:4"}],"name":"withdrawContractBalance","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"3274:2:4"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[],"src":"3296:0:4"},"scope":854,"src":"3242:119:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":855,"src":"226:3137:4"}],"src":"32:3332:4"},"id":4},"contracts/EthStaking.sol":{"ast":{"absolutePath":"contracts/EthStaking.sol","exportedSymbols":{"EtherStaking":[1161]},"id":1162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":856,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1161,"linearizedBaseContracts":[1161],"name":"EtherStaking","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EtherStaking.Stake","id":863,"members":[{"constant":false,"id":858,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":863,"src":"108:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"108:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"startTime","nodeType":"VariableDeclaration","scope":863,"src":"132:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"132:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"withdrawn","nodeType":"VariableDeclaration","scope":863,"src":"159:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"159:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Stake","nodeType":"StructDefinition","scope":1161,"src":"85:95:5","visibility":"public"},{"constant":false,"functionSelector":"16934fc4","id":868,"mutability":"mutable","name":"stakes","nodeType":"VariableDeclaration","scope":1161,"src":"186:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$863_storage_$","typeString":"mapping(address => struct EtherStaking.Stake)"},"typeName":{"id":867,"keyType":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"194:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"186:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$863_storage_$","typeString":"mapping(address => struct EtherStaking.Stake)"},"valueType":{"id":866,"nodeType":"UserDefinedTypeName","pathNode":{"id":865,"name":"Stake","nodeType":"IdentifierPath","referencedDeclaration":863,"src":"205:5:5"},"referencedDeclaration":863,"src":"205:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake"}}},"visibility":"public"},{"constant":false,"functionSelector":"7b0a47ee","id":870,"mutability":"mutable","name":"rewardRate","nodeType":"VariableDeclaration","scope":1161,"src":"231:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"231:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c03d5b47","id":872,"mutability":"mutable","name":"stakingPeriod","nodeType":"VariableDeclaration","scope":1161,"src":"262:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":874,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1161,"src":"296:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"296:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":885,"nodeType":"Block","src":"344:73:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":877,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"362:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"362:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":879,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"376:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"362:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420746865206f776e6572","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"383:15:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5","typeString":"literal_string \"Not the owner\""},"value":"Not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5","typeString":"literal_string \"Not the owner\""}],"id":876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"354:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"354:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"354:45:5"},{"id":884,"nodeType":"PlaceholderStatement","src":"409:1:5"}]},"id":886,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"341:2:5"},"src":"323:94:5","virtual":false,"visibility":"internal"},{"anonymous":false,"id":894,"name":"Staked","nodeType":"EventDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":894,"src":"436:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":894,"src":"458:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":892,"indexed":false,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":894,"src":"474:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"435:52:5"},"src":"423:65:5"},{"anonymous":false,"id":902,"name":"Withdrawn","nodeType":"EventDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":902,"src":"509:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":902,"src":"531:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"531:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":900,"indexed":false,"mutability":"mutable","name":"reward","nodeType":"VariableDeclaration","scope":902,"src":"547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"508:54:5"},"src":"493:70:5"},{"body":{"id":936,"nodeType":"Block","src":"626:259:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":910,"name":"_rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"644:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"644:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265776172642072617465206d7573742062652067726561746572207468616e2030","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"661:36:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695","typeString":"literal_string \"Reward rate must be greater than 0\""},"value":"Reward rate must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695","typeString":"literal_string \"Reward rate must be greater than 0\""}],"id":909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"636:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"636:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"636:62:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"_stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"716:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"733:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"716:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e6720706572696f64206d7573742062652067726561746572207468616e2030","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"736:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7e8be6e8a0eaea2837586efd201efa6e66ffd8c5cd6bb39c36251acf437ac4e","typeString":"literal_string \"Staking period must be greater than 0\""},"value":"Staking period must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7e8be6e8a0eaea2837586efd201efa6e66ffd8c5cd6bb39c36251acf437ac4e","typeString":"literal_string \"Staking period must be greater than 0\""}],"id":916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"708:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"708:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"708:68:5"},{"expression":{"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":923,"name":"rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"786:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":924,"name":"_rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"799:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"nodeType":"ExpressionStatement","src":"786:24:5"},{"expression":{"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":927,"name":"stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"820:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":928,"name":"_stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"836:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"820:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":930,"nodeType":"ExpressionStatement","src":"820:30:5"},{"expression":{"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":931,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"860:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"868:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"868:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"860:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":935,"nodeType":"ExpressionStatement","src":"860:18:5"}]},"id":937,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"_rewardRate","nodeType":"VariableDeclaration","scope":937,"src":"581:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"_stakingPeriod","nodeType":"VariableDeclaration","scope":937,"src":"602:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:45:5"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"626:0:5"},"scope":1161,"src":"569:316:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":981,"nodeType":"Block","src":"930:358:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"948:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"948:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"960:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"948:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520616d6f756e74206d7573742062652067726561746572207468616e2030","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"963:37:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30","typeString":"literal_string \"Stake amount must be greater than 0\""},"value":"Stake amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30","typeString":"literal_string \"Stake amount must be greater than 0\""}],"id":940,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"940:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"940:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"940:61:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":949,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1019:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$863_storage_$","typeString":"mapping(address => struct EtherStaking.Stake storage ref)"}},"id":952,"indexExpression":{"expression":{"id":950,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1026:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1026:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1019:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage","typeString":"struct EtherStaking.Stake storage ref"}},"id":953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":858,"src":"1019:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1048:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1019:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207374616b696e67","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1051:17:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe","typeString":"literal_string \"Already staking\""},"value":"Already staking"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe","typeString":"literal_string \"Already staking\""}],"id":948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1011:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"1011:58:5"},{"expression":{"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":959,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1080:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$863_storage_$","typeString":"mapping(address => struct EtherStaking.Stake storage ref)"}},"id":962,"indexExpression":{"expression":{"id":960,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1087:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1087:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1080:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage","typeString":"struct EtherStaking.Stake storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":964,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1129:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1129:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":966,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1163:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1163:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1203:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":963,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"1101:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Stake_$863_storage_ptr_$","typeString":"type(struct EtherStaking.Stake storage pointer)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["amount","startTime","withdrawn"],"nodeType":"FunctionCall","src":"1101:118:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_memory_ptr","typeString":"struct EtherStaking.Stake memory"}},"src":"1080:139:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage","typeString":"struct EtherStaking.Stake storage ref"}},"id":971,"nodeType":"ExpressionStatement","src":"1080:139:5"},{"eventCall":{"arguments":[{"expression":{"id":973,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1242:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1242:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":975,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1254:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1254:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":977,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1265:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1265:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"1235:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1235:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"EmitStatement","src":"1230:51:5"}]},"functionSelector":"d21577f2","id":982,"implemented":true,"kind":"function","modifiers":[],"name":"stakeEther","nodeType":"FunctionDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"910:2:5"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"930:0:5"},"scope":1161,"src":"891:397:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1038,"nodeType":"Block","src":"1365:395:5","statements":[{"assignments":[991],"declarations":[{"constant":false,"id":991,"mutability":"mutable","name":"stakeInfo","nodeType":"VariableDeclaration","scope":1038,"src":"1375:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake"},"typeName":{"id":990,"nodeType":"UserDefinedTypeName","pathNode":{"id":989,"name":"Stake","nodeType":"IdentifierPath","referencedDeclaration":863,"src":"1375:5:5"},"referencedDeclaration":863,"src":"1375:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake"}},"visibility":"internal"}],"id":995,"initialValue":{"baseExpression":{"id":992,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1401:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$863_storage_$","typeString":"mapping(address => struct EtherStaking.Stake storage ref)"}},"id":994,"indexExpression":{"id":993,"name":"staker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"1408:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1401:14:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage","typeString":"struct EtherStaking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1375:40:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":997,"name":"stakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"1433:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake storage pointer"}},"id":998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":858,"src":"1433:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1452:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1433:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207374616b6520666f756e64","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1455:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a","typeString":"literal_string \"No stake found\""},"value":"No stake found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a","typeString":"literal_string \"No stake found\""}],"id":996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1425:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1425:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"ExpressionStatement","src":"1425:47:5"},{"assignments":[1005],"declarations":[{"constant":false,"id":1005,"mutability":"mutable","name":"stakingDuration","nodeType":"VariableDeclaration","scope":1038,"src":"1483:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1011,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1006,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1509:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1509:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1008,"name":"stakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"1527:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake storage pointer"}},"id":1009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":860,"src":"1527:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1509:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1483:63:5"},{"assignments":[1013],"declarations":[{"constant":false,"id":1013,"mutability":"mutable","name":"reward","nodeType":"VariableDeclaration","scope":1038,"src":"1556:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1556:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1015,"initialValue":{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1556:18:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"stakingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1589:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1017,"name":"stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"1608:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1589:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1035,"nodeType":"IfStatement","src":"1585:145:5","trueBody":{"id":1034,"nodeType":"Block","src":"1623:107:5","statements":[{"expression":{"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1019,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1637:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1020,"name":"stakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"1647:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake storage pointer"}},"id":1021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":858,"src":"1647:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1022,"name":"rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1666:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1647:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1024,"name":"stakingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"1679:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1647:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1646:49:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1027,"name":"stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"1699:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313030","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1715:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1699:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1646:73:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1637:82:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1033,"nodeType":"ExpressionStatement","src":"1637:82:5"}]}},{"expression":{"id":1036,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1747:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":988,"id":1037,"nodeType":"Return","src":"1740:13:5"}]},"functionSelector":"d82e3962","id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"calculateReward","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"staker","nodeType":"VariableDeclaration","scope":1039,"src":"1319:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1318:16:5"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1039,"src":"1356:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1355:9:5"},"scope":1161,"src":"1294:466:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1113,"nodeType":"Block","src":"1795:546:5","statements":[{"assignments":[1044],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"stakeInfo","nodeType":"VariableDeclaration","scope":1113,"src":"1805:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake"},"typeName":{"id":1043,"nodeType":"UserDefinedTypeName","pathNode":{"id":1042,"name":"Stake","nodeType":"IdentifierPath","referencedDeclaration":863,"src":"1805:5:5"},"referencedDeclaration":863,"src":"1805:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake"}},"visibility":"internal"}],"id":1049,"initialValue":{"baseExpression":{"id":1045,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1831:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Stake_$863_storage_$","typeString":"mapping(address => struct EtherStaking.Stake storage ref)"}},"id":1048,"indexExpression":{"expression":{"id":1046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1838:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1838:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1831:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage","typeString":"struct EtherStaking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1805:44:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1051,"name":"stakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1867:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake storage pointer"}},"id":1052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":858,"src":"1867:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1886:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207374616b6520666f756e64","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1889:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a","typeString":"literal_string \"No stake found\""},"value":"No stake found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a","typeString":"literal_string \"No stake found\""}],"id":1050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1859:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1859:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"1859:47:5"},{"expression":{"arguments":[{"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1924:20:5","subExpression":{"expression":{"id":1059,"name":"stakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1925:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake storage pointer"}},"id":1060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"withdrawn","nodeType":"MemberAccess","referencedDeclaration":862,"src":"1925:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792077697468647261776e","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1946:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219","typeString":"literal_string \"Already withdrawn\""},"value":"Already withdrawn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219","typeString":"literal_string \"Already withdrawn\""}],"id":1058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1916:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1916:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"ExpressionStatement","src":"1916:50:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1066,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1984:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1984:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1068,"name":"stakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2003:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake storage pointer"}},"id":1069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":860,"src":"2003:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1070,"name":"stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2025:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2003:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1984:54:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e6720706572696f64206e6f742079657420656e646564","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2040:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a3a3ee7f4716cabe57160cf7f169bc773b09ae4a404f7930dddf07f03d5251c","typeString":"literal_string \"Staking period not yet ended\""},"value":"Staking period not yet ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a3a3ee7f4716cabe57160cf7f169bc773b09ae4a404f7930dddf07f03d5251c","typeString":"literal_string \"Staking period not yet ended\""}],"id":1065,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1976:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1976:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1075,"nodeType":"ExpressionStatement","src":"1976:95:5"},{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"reward","nodeType":"VariableDeclaration","scope":1113,"src":"2082:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"2082:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1082,"initialValue":{"arguments":[{"expression":{"id":1079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2115:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2115:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1078,"name":"calculateReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2099:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2099:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2082:44:5"},{"assignments":[1084],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"totalAmount","nodeType":"VariableDeclaration","scope":1113,"src":"2136:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2136:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1089,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1085,"name":"stakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2158:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake storage pointer"}},"id":1086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":858,"src":"2158:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1087,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2177:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2158:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2136:47:5"},{"expression":{"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1090,"name":"stakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2194:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake storage pointer"}},"id":1092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"withdrawn","nodeType":"MemberAccess","referencedDeclaration":862,"src":"2194:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2216:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2194:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1095,"nodeType":"ExpressionStatement","src":"2194:26:5"},{"expression":{"arguments":[{"id":1102,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"2259:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2238:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2238:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2230:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"2230:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2230:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"2230:28:5","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2230:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"ExpressionStatement","src":"2230:41:5"},{"eventCall":{"arguments":[{"expression":{"id":1106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2297:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2297:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1108,"name":"stakeInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2309:9:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$863_storage_ptr","typeString":"struct EtherStaking.Stake storage pointer"}},"id":1109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":858,"src":"2309:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1110,"name":"reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2327:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1105,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"2287:9:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2287:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1112,"nodeType":"EmitStatement","src":"2282:52:5"}]},"functionSelector":"3ccfd60b","id":1114,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"1783:2:5"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"1795:0:5"},"scope":1161,"src":"1766:575:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1131,"nodeType":"Block","src":"2401:63:5","statements":[{"expression":{"arguments":[{"expression":{"arguments":[{"id":1126,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2443:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_EtherStaking_$1161","typeString":"contract EtherStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EtherStaking_$1161","typeString":"contract EtherStaking"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2435:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:5","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2435:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2435:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1121,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2419:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2411:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"2411:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2411:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"2411:23:5","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2411:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"2411:46:5"}]},"functionSelector":"bfab3db9","id":1132,"implemented":true,"kind":"function","modifiers":[{"id":1117,"modifierName":{"id":1116,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":886,"src":"2391:9:5"},"nodeType":"ModifierInvocation","src":"2391:9:5"}],"name":"withdrawContractBalance","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[],"src":"2379:2:5"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"2401:0:5"},"scope":1161,"src":"2347:117:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1143,"nodeType":"Block","src":"2533:41:5","statements":[{"expression":{"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1139,"name":"rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2543:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1140,"name":"_rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"2556:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2543:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1142,"nodeType":"ExpressionStatement","src":"2543:24:5"}]},"functionSelector":"9e447fc6","id":1144,"implemented":true,"kind":"function","modifiers":[{"id":1137,"modifierName":{"id":1136,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":886,"src":"2523:9:5"},"nodeType":"ModifierInvocation","src":"2523:9:5"}],"name":"setRewardRate","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"_rewardRate","nodeType":"VariableDeclaration","scope":1144,"src":"2493:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2492:21:5"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[],"src":"2533:0:5"},"scope":1161,"src":"2470:104:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1155,"nodeType":"Block","src":"2649:47:5","statements":[{"expression":{"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1151,"name":"stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2659:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1152,"name":"_stakingPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2675:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2659:30:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1154,"nodeType":"ExpressionStatement","src":"2659:30:5"}]},"functionSelector":"957d7780","id":1156,"implemented":true,"kind":"function","modifiers":[{"id":1149,"modifierName":{"id":1148,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":886,"src":"2639:9:5"},"nodeType":"ModifierInvocation","src":"2639:9:5"}],"name":"setStakingPeriod","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"_stakingPeriod","nodeType":"VariableDeclaration","scope":1156,"src":"2606:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2606:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2605:24:5"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[],"src":"2649:0:5"},"scope":1161,"src":"2580:116:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1159,"nodeType":"Block","src":"2729:2:5","statements":[]},"id":1160,"implemented":true,"kind":"receive","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[],"src":"2709:2:5"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"2729:0:5"},"scope":1161,"src":"2702:29:5","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1162,"src":"57:2676:5"}],"src":"32:2702:5"},"id":5}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220708f804a6a6cb3c21086aafb66553325dff8301bed3607aaac5e13a3381c8cb164736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x8F804A6A6CB3C21086AAFB66553325DFF8 ADDRESS SHL 0xED CALLDATASIZE SMOD 0xAA 0xAC 0x5E SGT LOG3 CODESIZE SHR DUP13 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"482:6210:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220708f804a6a6cb3c21086aafb66553325dff8301bed3607aaac5e13a3381c8cb164736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x8F804A6A6CB3C21086AAFB66553325DFF8 ADDRESS SHL 0xED CALLDATASIZE SMOD 0xAA 0xAC 0x5E SGT LOG3 CODESIZE SHR DUP13 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"482:6210:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}"}},"contracts/ERC20Staking.sol":{"ERC20Staking":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_stakingToken","type":"address"},{"internalType":"uint256","name":"_rewardRate","type":"uint256"},{"internalType":"uint256","name":"_stakingPeriod","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"calculateReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rewardRate","type":"uint256"}],"name":"setRewardRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stakingPeriod","type":"uint256"}],"name":"setStakingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakes","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"bool","name":"withdrawn","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawContractBalance","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:462:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"143:317:6","statements":[{"body":{"nodeType":"YulBlock","src":"189:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"198:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"206:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"191:6:6"},"nodeType":"YulFunctionCall","src":"191:22:6"},"nodeType":"YulExpressionStatement","src":"191:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"164:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"160:3:6"},"nodeType":"YulFunctionCall","src":"160:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"185:2:6","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"156:3:6"},"nodeType":"YulFunctionCall","src":"156:32:6"},"nodeType":"YulIf","src":"153:2:6"},{"nodeType":"YulVariableDeclaration","src":"224:29:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"237:5:6"},"nodeType":"YulFunctionCall","src":"237:16:6"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"228:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"316:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"325:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"333:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"318:6:6"},"nodeType":"YulFunctionCall","src":"318:22:6"},"nodeType":"YulExpressionStatement","src":"318:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"275:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"286:5:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"301:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"306:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"297:3:6"},"nodeType":"YulFunctionCall","src":"297:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"310:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"293:3:6"},"nodeType":"YulFunctionCall","src":"293:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"282:3:6"},"nodeType":"YulFunctionCall","src":"282:31:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"272:2:6"},"nodeType":"YulFunctionCall","src":"272:42:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"265:6:6"},"nodeType":"YulFunctionCall","src":"265:50:6"},"nodeType":"YulIf","src":"262:2:6"},{"nodeType":"YulAssignment","src":"351:15:6","value":{"name":"value","nodeType":"YulIdentifier","src":"361:5:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"351:6:6"}]},{"nodeType":"YulAssignment","src":"375:35:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"395:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"406:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"391:3:6"},"nodeType":"YulFunctionCall","src":"391:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"385:5:6"},"nodeType":"YulFunctionCall","src":"385:25:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"375:6:6"}]},{"nodeType":"YulAssignment","src":"419:35:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"439:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"450:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"435:3:6"},"nodeType":"YulFunctionCall","src":"435:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"429:5:6"},"nodeType":"YulFunctionCall","src":"429:25:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"419:6:6"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$190t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"93:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"104:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"116:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"124:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"132:6:6","type":""}],"src":"14:446:6"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$190t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610c30380380610c3083398101604081905261002f916100bf565b61003f61003a61006b565b61006f565b600180546001600160a01b0319166001600160a01b039490941693909317909255600255600355610100565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100d3578283fd5b83516001600160a01b03811681146100e9578384fd5b602085015160409095015190969495509392505050565b610b218061010f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063957d77801161008c578063bfab3db911610066578063bfab3db91461017c578063c03d5b4714610184578063d82e39621461018c578063f2fde38b1461019f576100cf565b8063957d7780146101435780639e447fc614610156578063a694fc3a14610169576100cf565b806316934fc4146100d45780633ccfd60b146100ff578063715018a61461010957806372f702f3146101115780637b0a47ee146101265780638da5cb5b1461013b575b600080fd5b6100e76100e23660046107ca565b6101b2565b6040516100f693929190610a4f565b60405180910390f35b6101076101d6565b005b610107610415565b610119610429565b6040516100f69190610829565b61012e610438565b6040516100f69190610a38565b61011961043e565b610107610151366004610811565b61044d565b610107610164366004610811565b61045a565b610107610177366004610811565b610467565b6101076105ac565b61012e6105f7565b61012e61019a3660046107ca565b6105fd565b6101076101ad3660046107ca565b6106c9565b60046020526000908152604090208054600182015460029092015490919060ff1683565b336000908152600460205260409020805461020c5760405162461bcd60e51b8152600401610203906109ab565b60405180910390fd5b600281015460ff16156102315760405162461bcd60e51b815260040161020390610980565b60035481600101546102439190610a67565b4210156102625760405162461bcd60e51b8152600401610203906108e9565b600061026d336105fd565b825490915060009061027f9083610700565b60028401805460ff1916600190811790915554845460405163a9059cbb60e01b81529293506001600160a01b039091169163a9059cbb916102c591339190600401610861565b602060405180830381600087803b1580156102df57600080fd5b505af11580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031791906107f1565b6103335760405162461bcd60e51b8152600401610203906108c0565b60015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906103659033908690600401610861565b602060405180830381600087803b15801561037f57600080fd5b505af1158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b791906107f1565b6103d35760405162461bcd60e51b815260040161020390610a08565b825460405133917f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc69161040891908690610a41565b60405180910390a2505050565b61041d610713565b6104276000610752565b565b6001546001600160a01b031681565b60025481565b6000546001600160a01b031690565b610455610713565b600355565b610462610713565b600255565b600081116104875760405162461bcd60e51b815260040161020390610920565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906104bb9033903090869060040161083d565b602060405180830381600087803b1580156104d557600080fd5b505af11580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d91906107f1565b6105295760405162461bcd60e51b8152600401610203906108c0565b3360009081526004602052604090208054156105575760405162461bcd60e51b815260040161020390610957565b818155426001820181905560028201805460ff1916905560405133917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90916105a0918691610a41565b60405180910390a25050565b6105b4610713565b6105bc61043e565b6001600160a01b03166108fc479081150290604051600060405180830381858888f193505050501580156105f4573d6000803e3d6000fd5b50565b60035481565b6001600160a01b03811660009081526004602090815260408083208151606081018352815480825260018301549482019490945260029091015460ff161515918101919091529015806106605750600354816020015161065d9190610a67565b42105b1561066f5760009150506106c4565b60006106888260200151426107a290919063ffffffff16565b90506106bf670de0b6b3a76400006106b9836106b360025487600001516107ae90919063ffffffff16565b906107ae565b906107ba565b925050505b919050565b6106d1610713565b6001600160a01b0381166106f75760405162461bcd60e51b81526004016102039061087a565b6105f481610752565b600061070c8284610a67565b9392505050565b61071b6107c6565b6001600160a01b031661072c61043e565b6001600160a01b0316146104275760405162461bcd60e51b8152600401610203906109d3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061070c8284610abe565b600061070c8284610a9f565b600061070c8284610a7f565b3390565b6000602082840312156107db578081fd5b81356001600160a01b038116811461070c578182fd5b600060208284031215610802578081fd5b8151801515811461070c578182fd5b600060208284031215610822578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6020808252601c908201527f5374616b696e6720706572696f64206e6f742079657420656e64656400000000604082015260600190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b6020808252600f908201526e416c7265616479207374616b696e6760881b604082015260600190565b60208082526011908201527020b63932b0b23c903bb4ba34323930bbb760791b604082015260600190565b6020808252600e908201526d139bc81cdd185ad948199bdd5b9960921b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526016908201527514995dd85c99081d1c985b9cd9995c8819985a5b195960521b604082015260600190565b90815260200190565b918252602082015260400190565b92835260208301919091521515604082015260600190565b60008219821115610a7a57610a7a610ad5565b500190565b600082610a9a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ab957610ab9610ad5565b500290565b600082821015610ad057610ad0610ad5565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cb72e5d13e4212549fe0c50ece59cf5c68d7d96c411922c26382ff83826f57b864736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC30 CODESIZE SUB DUP1 PUSH2 0xC30 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBF JUMP JUMPDEST PUSH2 0x3F PUSH2 0x3A PUSH2 0x6B JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 SSTORE PUSH1 0x3 SSTORE PUSH2 0x100 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE9 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB21 DUP1 PUSH2 0x10F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x957D7780 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBFAB3DB9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBFAB3DB9 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xC03D5B47 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19F JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x957D7780 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x169 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x1D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x107 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x107 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH2 0x107 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x12E PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x107 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D CALLER PUSH2 0x5FD JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x27F SWAP1 DUP4 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SLOAD DUP5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x2C5 SWAP2 CALLER SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x861 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x365 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x861 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x393 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0xA08 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 SWAP2 PUSH2 0x408 SWAP2 SWAP1 DUP7 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x41D PUSH2 0x713 JUMP JUMPDEST PUSH2 0x427 PUSH1 0x0 PUSH2 0x752 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x455 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x462 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x4BB SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x83D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x957 JUMP JUMPDEST DUP2 DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 SWAP2 PUSH2 0x5A0 SWAP2 DUP7 SWAP2 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 ISZERO DUP1 PUSH2 0x660 JUMPI POP PUSH1 0x3 SLOAD DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x65D SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x688 DUP3 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x7A2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x6BF PUSH8 0xDE0B6B3A7640000 PUSH2 0x6B9 DUP4 PUSH2 0x6B3 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x7AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x7AE JUMP JUMPDEST SWAP1 PUSH2 0x7BA JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D1 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x5F4 DUP2 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 DUP5 PUSH2 0xA67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x72C PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 DUP5 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 DUP5 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 DUP5 PUSH2 0xA7F JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x70C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x802 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x70C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x822 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E6720706572696F64206E6F742079657420656E64656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x416C7265616479207374616B696E67 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x20B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BC81CDD185AD948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x14995DD85C99081D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA7A JUMPI PUSH2 0xA7A PUSH2 0xAD5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA9A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xAB9 JUMPI PUSH2 0xAB9 PUSH2 0xAD5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xAD0 JUMPI PUSH2 0xAD0 PUSH2 0xAD5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH19 0xE5D13E4212549FE0C50ECE59CF5C68D7D96C41 NOT 0x22 0xC2 PUSH4 0x82FF8382 PUSH16 0x57B864736F6C63430008010033000000 ","sourceMap":"226:3137:4:-:0;;;906:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;:12::i;:::-;936:18;:32::i;:::-;995:12:4;:28;;-1:-1:-1;;;;;;995:28:4;-1:-1:-1;;;;;995:28:4;;;;;;;;;;;1033:10;:24;1067:13;:30;226:3137;;655:96:2;734:10;655:96;:::o;2426:187:0:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2426:187;;:::o;14:446:6:-;;;;185:2;173:9;164:7;160:23;156:32;153:2;;;206:6;198;191:22;153:2;237:16;;-1:-1:-1;;;;;282:31:6;;272:42;;262:2;;333:6;325;318:22;262:2;406;391:18;;385:25;450:2;435:18;;;429:25;361:5;;385:25;;-1:-1:-1;429:25:6;143:317;-1:-1:-1;;;143:317:6:o;:::-;226:3137:4;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6678:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:236:6","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:6"},"nodeType":"YulFunctionCall","src":"132:22:6"},"nodeType":"YulExpressionStatement","src":"132:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:6"},"nodeType":"YulFunctionCall","src":"101:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:6"},"nodeType":"YulFunctionCall","src":"97:32:6"},"nodeType":"YulIf","src":"94:2:6"},{"nodeType":"YulVariableDeclaration","src":"165:36:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:6"},"nodeType":"YulFunctionCall","src":"178:23:6"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"264:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"273:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"281:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"266:6:6"},"nodeType":"YulFunctionCall","src":"266:22:6"},"nodeType":"YulExpressionStatement","src":"266:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"234:5:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"249:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"254:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"245:3:6"},"nodeType":"YulFunctionCall","src":"245:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"241:3:6"},"nodeType":"YulFunctionCall","src":"241:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"230:3:6"},"nodeType":"YulFunctionCall","src":"230:31:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"220:2:6"},"nodeType":"YulFunctionCall","src":"220:42:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"213:6:6"},"nodeType":"YulFunctionCall","src":"213:50:6"},"nodeType":"YulIf","src":"210:2:6"},{"nodeType":"YulAssignment","src":"299:15:6","value":{"name":"value","nodeType":"YulIdentifier","src":"309:5:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"299:6:6"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:6","type":""}],"src":"14:306:6"},{"body":{"nodeType":"YulBlock","src":"403:219:6","statements":[{"body":{"nodeType":"YulBlock","src":"449:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"458:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"466:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"451:6:6"},"nodeType":"YulFunctionCall","src":"451:22:6"},"nodeType":"YulExpressionStatement","src":"451:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"424:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"433:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"420:3:6"},"nodeType":"YulFunctionCall","src":"420:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"445:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"416:3:6"},"nodeType":"YulFunctionCall","src":"416:32:6"},"nodeType":"YulIf","src":"413:2:6"},{"nodeType":"YulVariableDeclaration","src":"484:29:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"503:9:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"497:5:6"},"nodeType":"YulFunctionCall","src":"497:16:6"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"488:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"566:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"575:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"583:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"568:6:6"},"nodeType":"YulFunctionCall","src":"568:22:6"},"nodeType":"YulExpressionStatement","src":"568:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"535:5:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"556:5:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"549:6:6"},"nodeType":"YulFunctionCall","src":"549:13:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"542:6:6"},"nodeType":"YulFunctionCall","src":"542:21:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"532:2:6"},"nodeType":"YulFunctionCall","src":"532:32:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"525:6:6"},"nodeType":"YulFunctionCall","src":"525:40:6"},"nodeType":"YulIf","src":"522:2:6"},{"nodeType":"YulAssignment","src":"601:15:6","value":{"name":"value","nodeType":"YulIdentifier","src":"611:5:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"601:6:6"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"380:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"392:6:6","type":""}],"src":"325:297:6"},{"body":{"nodeType":"YulBlock","src":"697:120:6","statements":[{"body":{"nodeType":"YulBlock","src":"743:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"752:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"760:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:6"},"nodeType":"YulFunctionCall","src":"745:22:6"},"nodeType":"YulExpressionStatement","src":"745:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"718:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"727:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"714:3:6"},"nodeType":"YulFunctionCall","src":"714:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"739:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"710:3:6"},"nodeType":"YulFunctionCall","src":"710:32:6"},"nodeType":"YulIf","src":"707:2:6"},{"nodeType":"YulAssignment","src":"778:33:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"788:12:6"},"nodeType":"YulFunctionCall","src":"788:23:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"778:6:6"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"663:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"674:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"686:6:6","type":""}],"src":"627:190:6"},{"body":{"nodeType":"YulBlock","src":"923:102:6","statements":[{"nodeType":"YulAssignment","src":"933:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"945:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"956:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"941:3:6"},"nodeType":"YulFunctionCall","src":"941:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"933:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"975:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"990:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1006:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1011:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1002:3:6"},"nodeType":"YulFunctionCall","src":"1002:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"1015:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"998:3:6"},"nodeType":"YulFunctionCall","src":"998:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"986:3:6"},"nodeType":"YulFunctionCall","src":"986:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"968:6:6"},"nodeType":"YulFunctionCall","src":"968:51:6"},"nodeType":"YulExpressionStatement","src":"968:51:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"903:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"914:4:6","type":""}],"src":"822:203:6"},{"body":{"nodeType":"YulBlock","src":"1187:218:6","statements":[{"nodeType":"YulAssignment","src":"1197:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1209:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1220:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1205:3:6"},"nodeType":"YulFunctionCall","src":"1205:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1197:4:6"}]},{"nodeType":"YulVariableDeclaration","src":"1232:29:6","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1250:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1255:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1246:3:6"},"nodeType":"YulFunctionCall","src":"1246:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"1259:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1242:3:6"},"nodeType":"YulFunctionCall","src":"1242:19:6"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1236:2:6","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1277:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1292:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1300:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1288:3:6"},"nodeType":"YulFunctionCall","src":"1288:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1270:6:6"},"nodeType":"YulFunctionCall","src":"1270:34:6"},"nodeType":"YulExpressionStatement","src":"1270:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1324:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1335:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1320:3:6"},"nodeType":"YulFunctionCall","src":"1320:18:6"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1344:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1352:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1340:3:6"},"nodeType":"YulFunctionCall","src":"1340:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1313:6:6"},"nodeType":"YulFunctionCall","src":"1313:43:6"},"nodeType":"YulExpressionStatement","src":"1313:43:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1376:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1387:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1372:3:6"},"nodeType":"YulFunctionCall","src":"1372:18:6"},{"name":"value2","nodeType":"YulIdentifier","src":"1392:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1365:6:6"},"nodeType":"YulFunctionCall","src":"1365:34:6"},"nodeType":"YulExpressionStatement","src":"1365:34:6"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1140:9:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1151:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1159:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1167:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1178:4:6","type":""}],"src":"1030:375:6"},{"body":{"nodeType":"YulBlock","src":"1539:145:6","statements":[{"nodeType":"YulAssignment","src":"1549:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1572:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1557:3:6"},"nodeType":"YulFunctionCall","src":"1557:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1549:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1591:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1606:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1622:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1627:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1618:3:6"},"nodeType":"YulFunctionCall","src":"1618:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"1631:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1614:3:6"},"nodeType":"YulFunctionCall","src":"1614:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1602:3:6"},"nodeType":"YulFunctionCall","src":"1602:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1584:6:6"},"nodeType":"YulFunctionCall","src":"1584:51:6"},"nodeType":"YulExpressionStatement","src":"1584:51:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1655:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1666:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1651:3:6"},"nodeType":"YulFunctionCall","src":"1651:18:6"},{"name":"value1","nodeType":"YulIdentifier","src":"1671:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1644:6:6"},"nodeType":"YulFunctionCall","src":"1644:34:6"},"nodeType":"YulExpressionStatement","src":"1644:34:6"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1500:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1511:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1519:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1530:4:6","type":""}],"src":"1410:274:6"},{"body":{"nodeType":"YulBlock","src":"1804:102:6","statements":[{"nodeType":"YulAssignment","src":"1814:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1826:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1837:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1822:3:6"},"nodeType":"YulFunctionCall","src":"1822:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1814:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1856:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1871:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1892:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1883:3:6"},"nodeType":"YulFunctionCall","src":"1883:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"1896:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1879:3:6"},"nodeType":"YulFunctionCall","src":"1879:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1867:3:6"},"nodeType":"YulFunctionCall","src":"1867:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1849:6:6"},"nodeType":"YulFunctionCall","src":"1849:51:6"},"nodeType":"YulExpressionStatement","src":"1849:51:6"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1773:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1784:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1795:4:6","type":""}],"src":"1689:217:6"},{"body":{"nodeType":"YulBlock","src":"2085:228:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2102:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2113:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2095:6:6"},"nodeType":"YulFunctionCall","src":"2095:21:6"},"nodeType":"YulExpressionStatement","src":"2095:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2136:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2147:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2132:3:6"},"nodeType":"YulFunctionCall","src":"2132:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"2152:2:6","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2125:6:6"},"nodeType":"YulFunctionCall","src":"2125:30:6"},"nodeType":"YulExpressionStatement","src":"2125:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2175:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2186:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2171:3:6"},"nodeType":"YulFunctionCall","src":"2171:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"2191:34:6","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2164:6:6"},"nodeType":"YulFunctionCall","src":"2164:62:6"},"nodeType":"YulExpressionStatement","src":"2164:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2246:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2257:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2242:3:6"},"nodeType":"YulFunctionCall","src":"2242:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"2262:8:6","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2235:6:6"},"nodeType":"YulFunctionCall","src":"2235:36:6"},"nodeType":"YulExpressionStatement","src":"2235:36:6"},{"nodeType":"YulAssignment","src":"2280:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2292:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2303:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2288:3:6"},"nodeType":"YulFunctionCall","src":"2288:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2280:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2062:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2076:4:6","type":""}],"src":"1911:402:6"},{"body":{"nodeType":"YulBlock","src":"2492:165:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2509:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2520:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2502:6:6"},"nodeType":"YulFunctionCall","src":"2502:21:6"},"nodeType":"YulExpressionStatement","src":"2502:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2543:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2554:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2539:3:6"},"nodeType":"YulFunctionCall","src":"2539:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"2559:2:6","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2532:6:6"},"nodeType":"YulFunctionCall","src":"2532:30:6"},"nodeType":"YulExpressionStatement","src":"2532:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2582:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2593:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2578:3:6"},"nodeType":"YulFunctionCall","src":"2578:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"2598:17:6","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2571:6:6"},"nodeType":"YulFunctionCall","src":"2571:45:6"},"nodeType":"YulExpressionStatement","src":"2571:45:6"},{"nodeType":"YulAssignment","src":"2625:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2637:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2648:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:6"},"nodeType":"YulFunctionCall","src":"2633:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2625:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2469:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2483:4:6","type":""}],"src":"2318:339:6"},{"body":{"nodeType":"YulBlock","src":"2836:178:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2853:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2864:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2846:6:6"},"nodeType":"YulFunctionCall","src":"2846:21:6"},"nodeType":"YulExpressionStatement","src":"2846:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2887:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2898:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2883:3:6"},"nodeType":"YulFunctionCall","src":"2883:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"2903:2:6","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2876:6:6"},"nodeType":"YulFunctionCall","src":"2876:30:6"},"nodeType":"YulExpressionStatement","src":"2876:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2926:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2937:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2922:3:6"},"nodeType":"YulFunctionCall","src":"2922:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"2942:30:6","type":"","value":"Staking period not yet ended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2915:6:6"},"nodeType":"YulFunctionCall","src":"2915:58:6"},"nodeType":"YulExpressionStatement","src":"2915:58:6"},{"nodeType":"YulAssignment","src":"2982:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2994:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3005:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2990:3:6"},"nodeType":"YulFunctionCall","src":"2990:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2982:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a3a3ee7f4716cabe57160cf7f169bc773b09ae4a404f7930dddf07f03d5251c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2813:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2827:4:6","type":""}],"src":"2662:352:6"},{"body":{"nodeType":"YulBlock","src":"3193:179:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3210:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3221:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3203:6:6"},"nodeType":"YulFunctionCall","src":"3203:21:6"},"nodeType":"YulExpressionStatement","src":"3203:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3255:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3240:3:6"},"nodeType":"YulFunctionCall","src":"3240:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"3260:2:6","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3233:6:6"},"nodeType":"YulFunctionCall","src":"3233:30:6"},"nodeType":"YulExpressionStatement","src":"3233:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3283:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3294:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3279:3:6"},"nodeType":"YulFunctionCall","src":"3279:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"3299:31:6","type":"","value":"Amount must be greater than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3272:6:6"},"nodeType":"YulFunctionCall","src":"3272:59:6"},"nodeType":"YulExpressionStatement","src":"3272:59:6"},{"nodeType":"YulAssignment","src":"3340:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3352:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3363:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3348:3:6"},"nodeType":"YulFunctionCall","src":"3348:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3340:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3170:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3184:4:6","type":""}],"src":"3019:353:6"},{"body":{"nodeType":"YulBlock","src":"3551:165:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3568:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3579:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3561:6:6"},"nodeType":"YulFunctionCall","src":"3561:21:6"},"nodeType":"YulExpressionStatement","src":"3561:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3602:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3613:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3598:3:6"},"nodeType":"YulFunctionCall","src":"3598:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"3618:2:6","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3591:6:6"},"nodeType":"YulFunctionCall","src":"3591:30:6"},"nodeType":"YulExpressionStatement","src":"3591:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3641:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3652:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:6"},"nodeType":"YulFunctionCall","src":"3637:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"3657:17:6","type":"","value":"Already staking"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3630:6:6"},"nodeType":"YulFunctionCall","src":"3630:45:6"},"nodeType":"YulExpressionStatement","src":"3630:45:6"},{"nodeType":"YulAssignment","src":"3684:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3696:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3707:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3692:3:6"},"nodeType":"YulFunctionCall","src":"3692:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3684:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3528:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3542:4:6","type":""}],"src":"3377:339:6"},{"body":{"nodeType":"YulBlock","src":"3895:167:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3912:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3923:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3905:6:6"},"nodeType":"YulFunctionCall","src":"3905:21:6"},"nodeType":"YulExpressionStatement","src":"3905:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3946:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3957:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3942:3:6"},"nodeType":"YulFunctionCall","src":"3942:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"3962:2:6","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3935:6:6"},"nodeType":"YulFunctionCall","src":"3935:30:6"},"nodeType":"YulExpressionStatement","src":"3935:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3985:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3996:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:6"},"nodeType":"YulFunctionCall","src":"3981:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"4001:19:6","type":"","value":"Already withdrawn"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3974:6:6"},"nodeType":"YulFunctionCall","src":"3974:47:6"},"nodeType":"YulExpressionStatement","src":"3974:47:6"},{"nodeType":"YulAssignment","src":"4030:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4042:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4053:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4038:3:6"},"nodeType":"YulFunctionCall","src":"4038:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4030:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3872:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3886:4:6","type":""}],"src":"3721:341:6"},{"body":{"nodeType":"YulBlock","src":"4241:164:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4258:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4269:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4251:6:6"},"nodeType":"YulFunctionCall","src":"4251:21:6"},"nodeType":"YulExpressionStatement","src":"4251:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4303:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:6"},"nodeType":"YulFunctionCall","src":"4288:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"4308:2:6","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4281:6:6"},"nodeType":"YulFunctionCall","src":"4281:30:6"},"nodeType":"YulExpressionStatement","src":"4281:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4331:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4342:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4327:3:6"},"nodeType":"YulFunctionCall","src":"4327:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"4347:16:6","type":"","value":"No stake found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4320:6:6"},"nodeType":"YulFunctionCall","src":"4320:44:6"},"nodeType":"YulExpressionStatement","src":"4320:44:6"},{"nodeType":"YulAssignment","src":"4373:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4385:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4396:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4381:3:6"},"nodeType":"YulFunctionCall","src":"4381:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4373:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4218:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4232:4:6","type":""}],"src":"4067:338:6"},{"body":{"nodeType":"YulBlock","src":"4584:182:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4601:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4612:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4594:6:6"},"nodeType":"YulFunctionCall","src":"4594:21:6"},"nodeType":"YulExpressionStatement","src":"4594:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4635:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4646:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4631:3:6"},"nodeType":"YulFunctionCall","src":"4631:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"4651:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4624:6:6"},"nodeType":"YulFunctionCall","src":"4624:30:6"},"nodeType":"YulExpressionStatement","src":"4624:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4674:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4670:3:6"},"nodeType":"YulFunctionCall","src":"4670:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"4690:34:6","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4663:6:6"},"nodeType":"YulFunctionCall","src":"4663:62:6"},"nodeType":"YulExpressionStatement","src":"4663:62:6"},{"nodeType":"YulAssignment","src":"4734:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4746:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4757:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:6"},"nodeType":"YulFunctionCall","src":"4742:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4734:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4561:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4575:4:6","type":""}],"src":"4410:356:6"},{"body":{"nodeType":"YulBlock","src":"4945:172:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4962:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4973:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4955:6:6"},"nodeType":"YulFunctionCall","src":"4955:21:6"},"nodeType":"YulExpressionStatement","src":"4955:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4996:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5007:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4992:3:6"},"nodeType":"YulFunctionCall","src":"4992:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"5012:2:6","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4985:6:6"},"nodeType":"YulFunctionCall","src":"4985:30:6"},"nodeType":"YulExpressionStatement","src":"4985:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5035:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5046:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:6"},"nodeType":"YulFunctionCall","src":"5031:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"5051:24:6","type":"","value":"Reward transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5024:6:6"},"nodeType":"YulFunctionCall","src":"5024:52:6"},"nodeType":"YulExpressionStatement","src":"5024:52:6"},{"nodeType":"YulAssignment","src":"5085:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5097:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5108:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:6"},"nodeType":"YulFunctionCall","src":"5093:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5085:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4922:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4936:4:6","type":""}],"src":"4771:346:6"},{"body":{"nodeType":"YulBlock","src":"5223:76:6","statements":[{"nodeType":"YulAssignment","src":"5233:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5245:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5256:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5241:3:6"},"nodeType":"YulFunctionCall","src":"5241:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5233:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5275:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"5286:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5268:6:6"},"nodeType":"YulFunctionCall","src":"5268:25:6"},"nodeType":"YulExpressionStatement","src":"5268:25:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5192:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5203:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5214:4:6","type":""}],"src":"5122:177:6"},{"body":{"nodeType":"YulBlock","src":"5433:119:6","statements":[{"nodeType":"YulAssignment","src":"5443:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5455:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5466:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5451:3:6"},"nodeType":"YulFunctionCall","src":"5451:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5443:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5485:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"5496:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5478:6:6"},"nodeType":"YulFunctionCall","src":"5478:25:6"},"nodeType":"YulExpressionStatement","src":"5478:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5523:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5534:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5519:3:6"},"nodeType":"YulFunctionCall","src":"5519:18:6"},{"name":"value1","nodeType":"YulIdentifier","src":"5539:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5512:6:6"},"nodeType":"YulFunctionCall","src":"5512:34:6"},"nodeType":"YulExpressionStatement","src":"5512:34:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5394:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5405:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5413:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5424:4:6","type":""}],"src":"5304:248:6"},{"body":{"nodeType":"YulBlock","src":"5708:178:6","statements":[{"nodeType":"YulAssignment","src":"5718:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5730:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5741:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5726:3:6"},"nodeType":"YulFunctionCall","src":"5726:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5718:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5760:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"5771:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5753:6:6"},"nodeType":"YulFunctionCall","src":"5753:25:6"},"nodeType":"YulExpressionStatement","src":"5753:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5798:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5809:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5794:3:6"},"nodeType":"YulFunctionCall","src":"5794:18:6"},{"name":"value1","nodeType":"YulIdentifier","src":"5814:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5787:6:6"},"nodeType":"YulFunctionCall","src":"5787:34:6"},"nodeType":"YulExpressionStatement","src":"5787:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5841:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5852:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5837:3:6"},"nodeType":"YulFunctionCall","src":"5837:18:6"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5871:6:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5864:6:6"},"nodeType":"YulFunctionCall","src":"5864:14:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5857:6:6"},"nodeType":"YulFunctionCall","src":"5857:22:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5830:6:6"},"nodeType":"YulFunctionCall","src":"5830:50:6"},"nodeType":"YulExpressionStatement","src":"5830:50:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5661:9:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5672:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5680:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5688:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5699:4:6","type":""}],"src":"5557:329:6"},{"body":{"nodeType":"YulBlock","src":"5939:80:6","statements":[{"body":{"nodeType":"YulBlock","src":"5966:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5968:16:6"},"nodeType":"YulFunctionCall","src":"5968:18:6"},"nodeType":"YulExpressionStatement","src":"5968:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5955:1:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5962:1:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5958:3:6"},"nodeType":"YulFunctionCall","src":"5958:6:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5952:2:6"},"nodeType":"YulFunctionCall","src":"5952:13:6"},"nodeType":"YulIf","src":"5949:2:6"},{"nodeType":"YulAssignment","src":"5997:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6008:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6011:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6004:3:6"},"nodeType":"YulFunctionCall","src":"6004:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5997:3:6"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5922:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"5925:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5931:3:6","type":""}],"src":"5891:128:6"},{"body":{"nodeType":"YulBlock","src":"6070:171:6","statements":[{"body":{"nodeType":"YulBlock","src":"6101:111:6","statements":[{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6122:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6129:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6134:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6125:3:6"},"nodeType":"YulFunctionCall","src":"6125:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6115:6:6"},"nodeType":"YulFunctionCall","src":"6115:31:6"},"nodeType":"YulExpressionStatement","src":"6115:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6166:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6169:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6159:6:6"},"nodeType":"YulFunctionCall","src":"6159:15:6"},"nodeType":"YulExpressionStatement","src":"6159:15:6"},{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6194:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"6197:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6187:6:6"},"nodeType":"YulFunctionCall","src":"6187:15:6"},"nodeType":"YulExpressionStatement","src":"6187:15:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6090:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6083:6:6"},"nodeType":"YulFunctionCall","src":"6083:9:6"},"nodeType":"YulIf","src":"6080:2:6"},{"nodeType":"YulAssignment","src":"6221:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6230:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6233:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6226:3:6"},"nodeType":"YulFunctionCall","src":"6226:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6221:1:6"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6055:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6058:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6064:1:6","type":""}],"src":"6024:217:6"},{"body":{"nodeType":"YulBlock","src":"6298:116:6","statements":[{"body":{"nodeType":"YulBlock","src":"6357:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6359:16:6"},"nodeType":"YulFunctionCall","src":"6359:18:6"},"nodeType":"YulExpressionStatement","src":"6359:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6329:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6322:6:6"},"nodeType":"YulFunctionCall","src":"6322:9:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6315:6:6"},"nodeType":"YulFunctionCall","src":"6315:17:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6337:1:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6348:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6344:3:6"},"nodeType":"YulFunctionCall","src":"6344:6:6"},{"name":"x","nodeType":"YulIdentifier","src":"6352:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6340:3:6"},"nodeType":"YulFunctionCall","src":"6340:14:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6334:2:6"},"nodeType":"YulFunctionCall","src":"6334:21:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6311:3:6"},"nodeType":"YulFunctionCall","src":"6311:45:6"},"nodeType":"YulIf","src":"6308:2:6"},{"nodeType":"YulAssignment","src":"6388:20:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6403:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6406:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6399:3:6"},"nodeType":"YulFunctionCall","src":"6399:9:6"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6388:7:6"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6277:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6280:1:6","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6286:7:6","type":""}],"src":"6246:168:6"},{"body":{"nodeType":"YulBlock","src":"6468:76:6","statements":[{"body":{"nodeType":"YulBlock","src":"6490:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6492:16:6"},"nodeType":"YulFunctionCall","src":"6492:18:6"},"nodeType":"YulExpressionStatement","src":"6492:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6484:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6487:1:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6481:2:6"},"nodeType":"YulFunctionCall","src":"6481:8:6"},"nodeType":"YulIf","src":"6478:2:6"},{"nodeType":"YulAssignment","src":"6521:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6533:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6536:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6529:3:6"},"nodeType":"YulFunctionCall","src":"6529:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6521:4:6"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6450:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6453:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6459:4:6","type":""}],"src":"6419:125:6"},{"body":{"nodeType":"YulBlock","src":"6581:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6598:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6605:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6610:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6601:3:6"},"nodeType":"YulFunctionCall","src":"6601:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6591:6:6"},"nodeType":"YulFunctionCall","src":"6591:31:6"},"nodeType":"YulExpressionStatement","src":"6591:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6638:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6641:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6631:6:6"},"nodeType":"YulFunctionCall","src":"6631:15:6"},"nodeType":"YulExpressionStatement","src":"6631:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6662:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6665:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6655:6:6"},"nodeType":"YulFunctionCall","src":"6655:15:6"},"nodeType":"YulExpressionStatement","src":"6655:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6549:127:6"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3a3a3ee7f4716cabe57160cf7f169bc773b09ae4a404f7930dddf07f03d5251c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Staking period not yet ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already staking\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Already withdrawn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No stake found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Reward transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063957d77801161008c578063bfab3db911610066578063bfab3db91461017c578063c03d5b4714610184578063d82e39621461018c578063f2fde38b1461019f576100cf565b8063957d7780146101435780639e447fc614610156578063a694fc3a14610169576100cf565b806316934fc4146100d45780633ccfd60b146100ff578063715018a61461010957806372f702f3146101115780637b0a47ee146101265780638da5cb5b1461013b575b600080fd5b6100e76100e23660046107ca565b6101b2565b6040516100f693929190610a4f565b60405180910390f35b6101076101d6565b005b610107610415565b610119610429565b6040516100f69190610829565b61012e610438565b6040516100f69190610a38565b61011961043e565b610107610151366004610811565b61044d565b610107610164366004610811565b61045a565b610107610177366004610811565b610467565b6101076105ac565b61012e6105f7565b61012e61019a3660046107ca565b6105fd565b6101076101ad3660046107ca565b6106c9565b60046020526000908152604090208054600182015460029092015490919060ff1683565b336000908152600460205260409020805461020c5760405162461bcd60e51b8152600401610203906109ab565b60405180910390fd5b600281015460ff16156102315760405162461bcd60e51b815260040161020390610980565b60035481600101546102439190610a67565b4210156102625760405162461bcd60e51b8152600401610203906108e9565b600061026d336105fd565b825490915060009061027f9083610700565b60028401805460ff1916600190811790915554845460405163a9059cbb60e01b81529293506001600160a01b039091169163a9059cbb916102c591339190600401610861565b602060405180830381600087803b1580156102df57600080fd5b505af11580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031791906107f1565b6103335760405162461bcd60e51b8152600401610203906108c0565b60015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906103659033908690600401610861565b602060405180830381600087803b15801561037f57600080fd5b505af1158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b791906107f1565b6103d35760405162461bcd60e51b815260040161020390610a08565b825460405133917f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc69161040891908690610a41565b60405180910390a2505050565b61041d610713565b6104276000610752565b565b6001546001600160a01b031681565b60025481565b6000546001600160a01b031690565b610455610713565b600355565b610462610713565b600255565b600081116104875760405162461bcd60e51b815260040161020390610920565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906104bb9033903090869060040161083d565b602060405180830381600087803b1580156104d557600080fd5b505af11580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d91906107f1565b6105295760405162461bcd60e51b8152600401610203906108c0565b3360009081526004602052604090208054156105575760405162461bcd60e51b815260040161020390610957565b818155426001820181905560028201805460ff1916905560405133917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90916105a0918691610a41565b60405180910390a25050565b6105b4610713565b6105bc61043e565b6001600160a01b03166108fc479081150290604051600060405180830381858888f193505050501580156105f4573d6000803e3d6000fd5b50565b60035481565b6001600160a01b03811660009081526004602090815260408083208151606081018352815480825260018301549482019490945260029091015460ff161515918101919091529015806106605750600354816020015161065d9190610a67565b42105b1561066f5760009150506106c4565b60006106888260200151426107a290919063ffffffff16565b90506106bf670de0b6b3a76400006106b9836106b360025487600001516107ae90919063ffffffff16565b906107ae565b906107ba565b925050505b919050565b6106d1610713565b6001600160a01b0381166106f75760405162461bcd60e51b81526004016102039061087a565b6105f481610752565b600061070c8284610a67565b9392505050565b61071b6107c6565b6001600160a01b031661072c61043e565b6001600160a01b0316146104275760405162461bcd60e51b8152600401610203906109d3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061070c8284610abe565b600061070c8284610a9f565b600061070c8284610a7f565b3390565b6000602082840312156107db578081fd5b81356001600160a01b038116811461070c578182fd5b600060208284031215610802578081fd5b8151801515811461070c578182fd5b600060208284031215610822578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6020808252601c908201527f5374616b696e6720706572696f64206e6f742079657420656e64656400000000604082015260600190565b6020808252601d908201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604082015260600190565b6020808252600f908201526e416c7265616479207374616b696e6760881b604082015260600190565b60208082526011908201527020b63932b0b23c903bb4ba34323930bbb760791b604082015260600190565b6020808252600e908201526d139bc81cdd185ad948199bdd5b9960921b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526016908201527514995dd85c99081d1c985b9cd9995c8819985a5b195960521b604082015260600190565b90815260200190565b918252602082015260400190565b92835260208301919091521515604082015260600190565b60008219821115610a7a57610a7a610ad5565b500190565b600082610a9a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ab957610ab9610ad5565b500290565b600082821015610ad057610ad0610ad5565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cb72e5d13e4212549fe0c50ece59cf5c68d7d96c411922c26382ff83826f57b864736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x957D7780 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBFAB3DB9 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBFAB3DB9 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xC03D5B47 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19F JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x957D7780 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x169 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x1D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xA38 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x43E JUMP JUMPDEST PUSH2 0x107 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x107 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH2 0x107 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x12E PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x107 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x20C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x262 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D CALLER PUSH2 0x5FD JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x27F SWAP1 DUP4 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SLOAD DUP5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x2C5 SWAP2 CALLER SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x861 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x365 SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x861 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x393 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x3D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0xA08 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 SWAP2 PUSH2 0x408 SWAP2 SWAP1 DUP7 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x41D PUSH2 0x713 JUMP JUMPDEST PUSH2 0x427 PUSH1 0x0 PUSH2 0x752 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x455 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH2 0x462 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x487 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x4BB SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x83D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH2 0x529 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x957 JUMP JUMPDEST DUP2 DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 SWAP2 PUSH2 0x5A0 SWAP2 DUP7 SWAP2 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 ISZERO DUP1 PUSH2 0x660 JUMPI POP PUSH1 0x3 SLOAD DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x65D SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x688 DUP3 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x7A2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x6BF PUSH8 0xDE0B6B3A7640000 PUSH2 0x6B9 DUP4 PUSH2 0x6B3 PUSH1 0x2 SLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x7AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x7AE JUMP JUMPDEST SWAP1 PUSH2 0x7BA JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D1 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x5F4 DUP2 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 DUP5 PUSH2 0xA67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x72C PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 DUP5 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 DUP5 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70C DUP3 DUP5 PUSH2 0xA7F JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x70C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x802 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x70C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x822 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E6720706572696F64206E6F742079657420656E64656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x416C7265616479207374616B696E67 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x20B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BC81CDD185AD948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x14995DD85C99081D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA7A JUMPI PUSH2 0xA7A PUSH2 0xAD5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA9A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xAB9 JUMPI PUSH2 0xAB9 PUSH2 0xAD5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xAD0 JUMPI PUSH2 0xAD0 PUSH2 0xAD5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH19 0xE5D13E4212549FE0C50ECE59CF5C68D7D96C41 NOT 0x22 0xC2 PUSH4 0x82FF8382 PUSH16 0x57B864736F6C63430008010033000000 ","sourceMap":"226:3137:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:39;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1687:671;;;:::i;:::-;;1824:101:0;;;:::i;330:26:4:-;;;:::i;:::-;;;;;;;:::i;393:25::-;;;:::i;:::-;;;;;;;:::i;1201:85:0:-;;;:::i;3036:116:4:-;;;;;;:::i;:::-;;:::i;2888:104::-;;;;;;:::i;:::-;;:::i;1142:485::-;;;;;;:::i;:::-;;:::i;3242:119::-;;;:::i;458:28::-;;;:::i;2426:421::-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;676:39:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1687:671::-;1755:10;1726:19;1748:18;;;:6;:18;;;;;1784:12;;1776:43;;;;-1:-1:-1;;;1776:43:4;;;;;;;:::i;:::-;;;;;;;;;1838:15;;;;;;1837:16;1829:46;;;;-1:-1:-1;;;1829:46:4;;;;;;;:::i;:::-;1930:13;;1912:5;:15;;;:31;;;;:::i;:::-;1893:15;:50;;1885:91;;;;-1:-1:-1;;;1885:91:4;;;;;;;:::i;:::-;1987:14;2004:27;2020:10;2004:15;:27::i;:::-;2063:12;;1987:44;;-1:-1:-1;2041:19:4;;2063:24;;1987:44;2063:16;:24::i;:::-;2098:15;;;:22;;-1:-1:-1;;2098:22:4;2116:4;2098:22;;;;;;2139:12;2173;;2139:47;;-1:-1:-1;;;2139:47:4;;2041:46;;-1:-1:-1;;;;;;2139:12:4;;;;:21;;:47;;2161:10;;2173:12;2139:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2131:75;;;;-1:-1:-1;;;2131:75:4;;;;;;;:::i;:::-;2224:12;;:41;;-1:-1:-1;;;2224:41:4;;-1:-1:-1;;;;;2224:12:4;;;;:21;;:41;;2246:10;;2258:6;;2224:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2216:76;;;;-1:-1:-1;;;2216:76:4;;;;;;;:::i;:::-;2330:12;;2308:43;;2318:10;;2308:43;;;;2330:12;2344:6;;2308:43;:::i;:::-;;;;;;;;1687:671;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;330:26:4:-;;;-1:-1:-1;;;;;330:26:4;;:::o;393:25::-;;;;:::o;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;:::o;3036:116:4:-;1094:13:0;:11;:13::i;:::-;3115::4::1;:30:::0;3036:116::o;2888:104::-;1094:13:0;:11;:13::i;:::-;2961:10:4::1;:24:::0;2888:104::o;1142:485::-;1211:1;1201:7;:11;1193:53;;;;-1:-1:-1;;;1193:53:4;;;;;;;:::i;:::-;1264:12;;:61;;-1:-1:-1;;;1264:61:4;;-1:-1:-1;;;;;1264:12:4;;;;:25;;:61;;1290:10;;1310:4;;1317:7;;1264:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1256:89;;;;-1:-1:-1;;;1256:89:4;;;;;;;:::i;:::-;1385:10;1356:19;1378:18;;;:6;:18;;;;;1414:12;;:17;1406:45;;;;-1:-1:-1;;;1406:45:4;;;;;;;:::i;:::-;1462:22;;;1512:15;1494;;;:33;;;1537:15;;;:23;;-1:-1:-1;;1537:23:4;;;1576:44;;1583:10;;1576:44;;;;1477:7;;1576:44;:::i;:::-;;;;;;;;1142:485;;:::o;3242:119::-;1094:13:0;:11;:13::i;:::-;3314:7:4::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;3306:25:4::1;:48;3332:21;3306:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3242:119::o:0;458:28::-;;;;:::o;2426:421::-;-1:-1:-1;;;;;2527:13:4;;2487:7;2527:13;;;:6;:13;;;;;;;;2506:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2554:17;;:70;;;2611:13;;2593:5;:15;;;:31;;;;:::i;:::-;2575:15;:49;2554:70;2550:109;;;2647:1;2640:8;;;;;2550:109;2668:23;2694:36;2714:5;:15;;;2694;:19;;:36;;;;:::i;:::-;2668:62;;2747:59;2801:4;2747:49;2780:15;2747:28;2764:10;;2747:5;:12;;;:16;;:28;;;;:::i;:::-;:32;;:49::i;:::-;:53;;:59::i;:::-;2740:66;;;;2426:421;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;;-1:-1:-1::0;;;2154:73:0::1;;;;;;;:::i;:::-;2237:28;2256:8;2237:18;:28::i;2755:96:3:-:0;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;2755:96;-1:-1:-1;;;2755:96:3:o;1359:130:0:-;1433:12;:10;:12::i;:::-;-1:-1:-1;;;;;1422:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:0;;1414:68;;;;-1:-1:-1;;;1414:68:0;;;;;;;:::i;2426:187::-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2426:187;;:::o;3122:96:3:-;3180:7;3206:5;3210:1;3206;:5;:::i;3465:96::-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;655:96:2:-;734:10;655:96;:::o;14:306:6:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:6;;220:42;;210:2;;281:6;273;266:22;325:297;;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:6;;697:120;-1:-1:-1;697:120:6:o;822:203::-;-1:-1:-1;;;;;986:32:6;;;;968:51;;956:2;941:18;;923:102::o;1030:375::-;-1:-1:-1;;;;;1288:15:6;;;1270:34;;1340:15;;;;1335:2;1320:18;;1313:43;1387:2;1372:18;;1365:34;;;;1220:2;1205:18;;1187:218::o;1410:274::-;-1:-1:-1;;;;;1602:32:6;;;;1584:51;;1666:2;1651:18;;1644:34;1572:2;1557:18;;1539:145::o;1911:402::-;2113:2;2095:21;;;2152:2;2132:18;;;2125:30;2191:34;2186:2;2171:18;;2164:62;-1:-1:-1;;;2257:2:6;2242:18;;2235:36;2303:3;2288:19;;2085:228::o;2318:339::-;2520:2;2502:21;;;2559:2;2539:18;;;2532:30;-1:-1:-1;;;2593:2:6;2578:18;;2571:45;2648:2;2633:18;;2492:165::o;2662:352::-;2864:2;2846:21;;;2903:2;2883:18;;;2876:30;2942;2937:2;2922:18;;2915:58;3005:2;2990:18;;2836:178::o;3019:353::-;3221:2;3203:21;;;3260:2;3240:18;;;3233:30;3299:31;3294:2;3279:18;;3272:59;3363:2;3348:18;;3193:179::o;3377:339::-;3579:2;3561:21;;;3618:2;3598:18;;;3591:30;-1:-1:-1;;;3652:2:6;3637:18;;3630:45;3707:2;3692:18;;3551:165::o;3721:341::-;3923:2;3905:21;;;3962:2;3942:18;;;3935:30;-1:-1:-1;;;3996:2:6;3981:18;;3974:47;4053:2;4038:18;;3895:167::o;4067:338::-;4269:2;4251:21;;;4308:2;4288:18;;;4281:30;-1:-1:-1;;;4342:2:6;4327:18;;4320:44;4396:2;4381:18;;4241:164::o;4410:356::-;4612:2;4594:21;;;4631:18;;;4624:30;4690:34;4685:2;4670:18;;4663:62;4757:2;4742:18;;4584:182::o;4771:346::-;4973:2;4955:21;;;5012:2;4992:18;;;4985:30;-1:-1:-1;;;5046:2:6;5031:18;;5024:52;5108:2;5093:18;;4945:172::o;5122:177::-;5268:25;;;5256:2;5241:18;;5223:76::o;5304:248::-;5478:25;;;5534:2;5519:18;;5512:34;5466:2;5451:18;;5433:119::o;5557:329::-;5753:25;;;5809:2;5794:18;;5787:34;;;;5864:14;5857:22;5852:2;5837:18;;5830:50;5741:2;5726:18;;5708:178::o;5891:128::-;;5962:1;5958:6;5955:1;5952:13;5949:2;;;5968:18;;:::i;:::-;-1:-1:-1;6004:9:6;;5939:80::o;6024:217::-;;6090:1;6080:2;;-1:-1:-1;;;6115:31:6;;6169:4;6166:1;6159:15;6197:4;6122:1;6187:15;6080:2;-1:-1:-1;6226:9:6;;6070:171::o;6246:168::-;;6352:1;6348;6344:6;6340:14;6337:1;6334:21;6329:1;6322:9;6315:17;6311:45;6308:2;;;6359:18;;:::i;:::-;-1:-1:-1;6399:9:6;;6298:116::o;6419:125::-;;6487:1;6484;6481:8;6478:2;;;6492:18;;:::i;:::-;-1:-1:-1;6529:9:6;;6468:76::o;6549:127::-;6610:10;6605:3;6601:20;6598:1;6591:31;6641:4;6638:1;6631:15;6665:4;6662:1;6655:15"},"methodIdentifiers":{"calculateReward(address)":"d82e3962","owner()":"8da5cb5b","renounceOwnership()":"715018a6","rewardRate()":"7b0a47ee","setRewardRate(uint256)":"9e447fc6","setStakingPeriod(uint256)":"957d7780","stake(uint256)":"a694fc3a","stakes(address)":"16934fc4","stakingPeriod()":"c03d5b47","stakingToken()":"72f702f3","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b","withdrawContractBalance()":"bfab3db9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakingPeriod\",\"type\":\"uint256\"}],\"name\":\"setStakingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawContractBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Staking.sol\":\"ERC20Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/ERC20Staking.sol\":{\"keccak256\":\"0xb5c00b8689de5eb21491e488b59c95ad822f714104974fe64c0658d09b185447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76ae959a5dbf02562cea1f3872e6183c6ccd83c1e8c899a49ccde4864f208b98\",\"dweb:/ipfs/QmQHWUFFazuL9mGzr6vqTTuMTioeJYuth8nVagTHJLiMM9\"]}},\"version\":1}"}},"contracts/EthStaking.sol":{"EtherStaking":{"abi":[{"inputs":[{"internalType":"uint256","name":"_rewardRate","type":"uint256"},{"internalType":"uint256","name":"_stakingPeriod","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"time","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"staker","type":"address"}],"name":"calculateReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rewardRate","type":"uint256"}],"name":"setRewardRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stakingPeriod","type":"uint256"}],"name":"setStakingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakeEther","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakes","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"bool","name":"withdrawn","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawContractBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1080:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"112:157:6","statements":[{"body":{"nodeType":"YulBlock","src":"158:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"167:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"175:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"160:6:6"},"nodeType":"YulFunctionCall","src":"160:22:6"},"nodeType":"YulExpressionStatement","src":"160:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"133:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"142:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"129:3:6"},"nodeType":"YulFunctionCall","src":"129:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"125:3:6"},"nodeType":"YulFunctionCall","src":"125:32:6"},"nodeType":"YulIf","src":"122:2:6"},{"nodeType":"YulAssignment","src":"193:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"209:9:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"203:5:6"},"nodeType":"YulFunctionCall","src":"203:16:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"193:6:6"}]},{"nodeType":"YulAssignment","src":"228:35:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"248:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"259:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"244:3:6"},"nodeType":"YulFunctionCall","src":"244:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"238:5:6"},"nodeType":"YulFunctionCall","src":"238:25:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"228:6:6"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"70:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"81:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"93:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"101:6:6","type":""}],"src":"14:255:6"},{"body":{"nodeType":"YulBlock","src":"448:224:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"465:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"476:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"458:6:6"},"nodeType":"YulFunctionCall","src":"458:21:6"},"nodeType":"YulExpressionStatement","src":"458:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"499:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"510:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"495:3:6"},"nodeType":"YulFunctionCall","src":"495:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"515:2:6","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"488:6:6"},"nodeType":"YulFunctionCall","src":"488:30:6"},"nodeType":"YulExpressionStatement","src":"488:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"538:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"549:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"534:3:6"},"nodeType":"YulFunctionCall","src":"534:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"554:34:6","type":"","value":"Reward rate must be greater than"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"527:6:6"},"nodeType":"YulFunctionCall","src":"527:62:6"},"nodeType":"YulExpressionStatement","src":"527:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"609:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"620:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"605:3:6"},"nodeType":"YulFunctionCall","src":"605:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"625:4:6","type":"","value":" 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"598:6:6"},"nodeType":"YulFunctionCall","src":"598:32:6"},"nodeType":"YulExpressionStatement","src":"598:32:6"},{"nodeType":"YulAssignment","src":"639:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"651:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"662:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"647:3:6"},"nodeType":"YulFunctionCall","src":"647:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"639:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"425:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"439:4:6","type":""}],"src":"274:398:6"},{"body":{"nodeType":"YulBlock","src":"851:227:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"868:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"879:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"861:6:6"},"nodeType":"YulFunctionCall","src":"861:21:6"},"nodeType":"YulExpressionStatement","src":"861:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"902:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"913:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"898:3:6"},"nodeType":"YulFunctionCall","src":"898:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"918:2:6","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"891:6:6"},"nodeType":"YulFunctionCall","src":"891:30:6"},"nodeType":"YulExpressionStatement","src":"891:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"941:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"952:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"937:3:6"},"nodeType":"YulFunctionCall","src":"937:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"957:34:6","type":"","value":"Staking period must be greater t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"930:6:6"},"nodeType":"YulFunctionCall","src":"930:62:6"},"nodeType":"YulExpressionStatement","src":"930:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1012:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1023:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1008:3:6"},"nodeType":"YulFunctionCall","src":"1008:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"1028:7:6","type":"","value":"han 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1001:6:6"},"nodeType":"YulFunctionCall","src":"1001:35:6"},"nodeType":"YulExpressionStatement","src":"1001:35:6"},{"nodeType":"YulAssignment","src":"1045:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1057:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1068:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1053:3:6"},"nodeType":"YulFunctionCall","src":"1053:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1045:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_c7e8be6e8a0eaea2837586efd201efa6e66ffd8c5cd6bb39c36251acf437ac4e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"828:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"842:4:6","type":""}],"src":"677:401:6"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Reward rate must be greater than\")\n        mstore(add(headStart, 96), \" 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c7e8be6e8a0eaea2837586efd201efa6e66ffd8c5cd6bb39c36251acf437ac4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Staking period must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161090d38038061090d83398101604081905261002f91610098565b600082116100585760405162461bcd60e51b815260040161004f906100bb565b60405180910390fd5b600081116100785760405162461bcd60e51b815260040161004f906100fd565b600191909155600255600380546001600160a01b03191633179055610142565b600080604083850312156100aa578182fd5b505080516020909101519092909150565b60208082526022908201527f5265776172642072617465206d7573742062652067726561746572207468616e604082015261020360f41b606082015260800190565b60208082526025908201527f5374616b696e6720706572696f64206d75737420626520677265617465722074604082015264068616e20360dc1b606082015260800190565b6107bc806101516000396000f3fe6080604052600436106100955760003560e01c80639e447fc6116100595780639e447fc614610154578063bfab3db914610174578063c03d5b4714610189578063d21577f21461019e578063d82e3962146101a65761009c565b806316934fc4146100a15780633ccfd60b146100d95780637b0a47ee146100f05780638da5cb5b14610112578063957d7780146101345761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461055c565b6101c6565b6040516100d0939291906106ea565b60405180910390f35b3480156100e557600080fd5b506100ee6101ea565b005b3480156100fc57600080fd5b50610105610317565b6040516100d091906106d3565b34801561011e57600080fd5b5061012761031d565b6040516100d091906105a2565b34801561014057600080fd5b506100ee61014f36600461058a565b61032c565b34801561016057600080fd5b506100ee61016f36600461058a565b61035b565b34801561018057600080fd5b506100ee61038a565b34801561019557600080fd5b506101056103f0565b6100ee6103f6565b3480156101b257600080fd5b506101056101c136600461055c565b6104ca565b60006020819052908152604090208054600182015460029092015490919060ff1683565b33600090815260208190526040902080546102205760405162461bcd60e51b815260040161021790610668565b60405180910390fd5b600281015460ff16156102455760405162461bcd60e51b815260040161021790610616565b60025481600101546102579190610702565b4210156102765760405162461bcd60e51b8152600401610217906105b6565b6000610281336104ca565b905060008183600001546102959190610702565b60028401805460ff19166001179055604051909150339082156108fc029083906000818181858888f193505050501580156102d4573d6000803e3d6000fd5b50825460405133917f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc69161030a919086906106dc565b60405180910390a2505050565b60015481565b6003546001600160a01b031681565b6003546001600160a01b031633146103565760405162461bcd60e51b815260040161021790610641565b600255565b6003546001600160a01b031633146103855760405162461bcd60e51b815260040161021790610641565b600155565b6003546001600160a01b031633146103b45760405162461bcd60e51b815260040161021790610641565b6003546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156103ed573d6000803e3d6000fd5b50565b60025481565b600034116104165760405162461bcd60e51b815260040161021790610690565b33600090815260208190526040902054156104435760405162461bcd60e51b8152600401610217906105ed565b604080516060810182523480825242602080840182815260008587018181523380835293829052908790209551865590516001860155516002909401805460ff191694151594909417909355925191927f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90926104c09291906106dc565b60405180910390a2565b6001600160a01b038116600090815260208190526040812080546105005760405162461bcd60e51b815260040161021790610668565b60008160010154426105129190610759565b9050600060025482106105545760025461052d90606461073a565b6001548454849161053d9161073a565b610547919061073a565b610551919061071a565b90505b949350505050565b60006020828403121561056d578081fd5b81356001600160a01b0381168114610583578182fd5b9392505050565b60006020828403121561059b578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6020808252601c908201527f5374616b696e6720706572696f64206e6f742079657420656e64656400000000604082015260600190565b6020808252600f908201526e416c7265616479207374616b696e6760881b604082015260600190565b60208082526011908201527020b63932b0b23c903bb4ba34323930bbb760791b604082015260600190565b6020808252600d908201526c2737ba103a34329037bbb732b960991b604082015260600190565b6020808252600e908201526d139bc81cdd185ad948199bdd5b9960921b604082015260600190565b60208082526023908201527f5374616b6520616d6f756e74206d75737420626520677265617465722074686160408201526206e20360ec1b606082015260800190565b90815260200190565b918252602082015260400190565b92835260208301919091521515604082015260600190565b6000821982111561071557610715610770565b500190565b60008261073557634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561075457610754610770565b500290565b60008282101561076b5761076b610770565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122066f3e068742c64b5aca9e7b5645c2f0b03d6c82152518ad737d00fa3f02b557b64736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x90D CODESIZE SUB DUP1 PUSH2 0x90D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x98 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F SWAP1 PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F SWAP1 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x142 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E6720706572696F64206D75737420626520677265617465722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x7BC DUP1 PUSH2 0x151 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E447FC6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xBFAB3DB9 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xC03D5B47 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xD21577F2 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x1A6 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x957D7780 EQ PUSH2 0x134 JUMPI PUSH2 0x9C JUMP JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x55C JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x1EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x6D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x5A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x38A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x3F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x55C JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x702 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281 CALLER PUSH2 0x4CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 SWAP2 PUSH2 0x30A SWAP2 SWAP1 DUP7 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x356 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x690 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLVALUE DUP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0x0 DUP6 DUP8 ADD DUP2 DUP2 MSTORE CALLER DUP1 DUP4 MSTORE SWAP4 DUP3 SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SWAP6 MLOAD DUP7 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP2 SWAP3 PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 SWAP3 PUSH2 0x4C0 SWAP3 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x759 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 LT PUSH2 0x554 JUMPI PUSH1 0x2 SLOAD PUSH2 0x52D SWAP1 PUSH1 0x64 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x1 SLOAD DUP5 SLOAD DUP5 SWAP2 PUSH2 0x53D SWAP2 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x583 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E6720706572696F64206E6F742079657420656E64656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x416C7265616479207374616B696E67 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x20B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BC81CDD185AD948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x715 JUMPI PUSH2 0x715 PUSH2 0x770 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x735 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x754 JUMPI PUSH2 0x754 PUSH2 0x770 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x76B JUMPI PUSH2 0x76B PUSH2 0x770 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xF3E068742C64B5 0xAC 0xA9 0xE7 0xB5 PUSH5 0x5C2F0B03D6 0xC8 0x21 MSTORE MLOAD DUP11 0xD7 CALLDATACOPY 0xD0 0xF LOG3 CREATE 0x2B SSTORE PUSH28 0x64736F6C634300080100330000000000000000000000000000000000 ","sourceMap":"57:2676:5:-:0;;;569:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;658:1;644:11;:15;636:62;;;;-1:-1:-1;;;636:62:5;;;;;;;:::i;:::-;;;;;;;;;733:1;716:14;:18;708:68;;;;-1:-1:-1;;;708:68:5;;;;;;;:::i;:::-;786:10;:24;;;;820:13;:30;860:5;:18;;-1:-1:-1;;;;;;860:18:5;868:10;860:18;;;57:2676;;14:255:6;;;154:2;142:9;133:7;129:23;125:32;122:2;;;175:6;167;160:22;122:2;-1:-1:-1;;203:16:6;;259:2;244:18;;;238:25;203:16;;238:25;;-1:-1:-1;112:157:6:o;274:398::-;476:2;458:21;;;515:2;495:18;;;488:30;554:34;549:2;534:18;;527:62;-1:-1:-1;;;620:2:6;605:18;;598:32;662:3;647:19;;448:224::o;677:401::-;879:2;861:21;;;918:2;898:18;;;891:30;957:34;952:2;937:18;;930:62;-1:-1:-1;;;1023:2:6;1008:18;;1001:35;1068:3;1053:19;;851:227::o;:::-;57:2676:5;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4420:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:236:6","statements":[{"body":{"nodeType":"YulBlock","src":"130:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"139:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"147:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:6"},"nodeType":"YulFunctionCall","src":"132:22:6"},"nodeType":"YulExpressionStatement","src":"132:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:6"},"nodeType":"YulFunctionCall","src":"101:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:6"},"nodeType":"YulFunctionCall","src":"97:32:6"},"nodeType":"YulIf","src":"94:2:6"},{"nodeType":"YulVariableDeclaration","src":"165:36:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"191:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"178:12:6"},"nodeType":"YulFunctionCall","src":"178:23:6"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"264:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"273:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"281:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"266:6:6"},"nodeType":"YulFunctionCall","src":"266:22:6"},"nodeType":"YulExpressionStatement","src":"266:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"234:5:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"249:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"254:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"245:3:6"},"nodeType":"YulFunctionCall","src":"245:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"241:3:6"},"nodeType":"YulFunctionCall","src":"241:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"230:3:6"},"nodeType":"YulFunctionCall","src":"230:31:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"220:2:6"},"nodeType":"YulFunctionCall","src":"220:42:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"213:6:6"},"nodeType":"YulFunctionCall","src":"213:50:6"},"nodeType":"YulIf","src":"210:2:6"},{"nodeType":"YulAssignment","src":"299:15:6","value":{"name":"value","nodeType":"YulIdentifier","src":"309:5:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"299:6:6"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:6","type":""}],"src":"14:306:6"},{"body":{"nodeType":"YulBlock","src":"395:120:6","statements":[{"body":{"nodeType":"YulBlock","src":"441:26:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"450:6:6"},{"name":"value0","nodeType":"YulIdentifier","src":"458:6:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"443:6:6"},"nodeType":"YulFunctionCall","src":"443:22:6"},"nodeType":"YulExpressionStatement","src":"443:22:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"416:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"425:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"412:3:6"},"nodeType":"YulFunctionCall","src":"412:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"437:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"408:3:6"},"nodeType":"YulFunctionCall","src":"408:32:6"},"nodeType":"YulIf","src":"405:2:6"},{"nodeType":"YulAssignment","src":"476:33:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"499:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"486:12:6"},"nodeType":"YulFunctionCall","src":"486:23:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"476:6:6"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"361:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"372:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"384:6:6","type":""}],"src":"325:190:6"},{"body":{"nodeType":"YulBlock","src":"621:102:6","statements":[{"nodeType":"YulAssignment","src":"631:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"643:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"654:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"639:3:6"},"nodeType":"YulFunctionCall","src":"639:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"631:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"673:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"688:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"704:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"709:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"700:3:6"},"nodeType":"YulFunctionCall","src":"700:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"713:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"696:3:6"},"nodeType":"YulFunctionCall","src":"696:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:6"},"nodeType":"YulFunctionCall","src":"684:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"666:6:6"},"nodeType":"YulFunctionCall","src":"666:51:6"},"nodeType":"YulExpressionStatement","src":"666:51:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"590:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"601:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"612:4:6","type":""}],"src":"520:203:6"},{"body":{"nodeType":"YulBlock","src":"902:178:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"919:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"930:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"912:6:6"},"nodeType":"YulFunctionCall","src":"912:21:6"},"nodeType":"YulExpressionStatement","src":"912:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"949:3:6"},"nodeType":"YulFunctionCall","src":"949:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"969:2:6","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:6"},"nodeType":"YulFunctionCall","src":"942:30:6"},"nodeType":"YulExpressionStatement","src":"942:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"992:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1003:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"988:3:6"},"nodeType":"YulFunctionCall","src":"988:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"1008:30:6","type":"","value":"Staking period not yet ended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"981:6:6"},"nodeType":"YulFunctionCall","src":"981:58:6"},"nodeType":"YulExpressionStatement","src":"981:58:6"},{"nodeType":"YulAssignment","src":"1048:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1060:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1071:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1056:3:6"},"nodeType":"YulFunctionCall","src":"1056:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1048:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a3a3ee7f4716cabe57160cf7f169bc773b09ae4a404f7930dddf07f03d5251c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"879:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"893:4:6","type":""}],"src":"728:352:6"},{"body":{"nodeType":"YulBlock","src":"1259:165:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1276:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1287:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1269:6:6"},"nodeType":"YulFunctionCall","src":"1269:21:6"},"nodeType":"YulExpressionStatement","src":"1269:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1321:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1306:3:6"},"nodeType":"YulFunctionCall","src":"1306:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"1326:2:6","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1299:6:6"},"nodeType":"YulFunctionCall","src":"1299:30:6"},"nodeType":"YulExpressionStatement","src":"1299:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1360:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1345:3:6"},"nodeType":"YulFunctionCall","src":"1345:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"1365:17:6","type":"","value":"Already staking"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1338:6:6"},"nodeType":"YulFunctionCall","src":"1338:45:6"},"nodeType":"YulExpressionStatement","src":"1338:45:6"},{"nodeType":"YulAssignment","src":"1392:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1404:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1415:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1400:3:6"},"nodeType":"YulFunctionCall","src":"1400:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1392:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1236:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1250:4:6","type":""}],"src":"1085:339:6"},{"body":{"nodeType":"YulBlock","src":"1603:167:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1620:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1631:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1613:6:6"},"nodeType":"YulFunctionCall","src":"1613:21:6"},"nodeType":"YulExpressionStatement","src":"1613:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1654:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1665:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1650:3:6"},"nodeType":"YulFunctionCall","src":"1650:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"1670:2:6","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1643:6:6"},"nodeType":"YulFunctionCall","src":"1643:30:6"},"nodeType":"YulExpressionStatement","src":"1643:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1693:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1704:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1689:3:6"},"nodeType":"YulFunctionCall","src":"1689:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"1709:19:6","type":"","value":"Already withdrawn"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1682:6:6"},"nodeType":"YulFunctionCall","src":"1682:47:6"},"nodeType":"YulExpressionStatement","src":"1682:47:6"},{"nodeType":"YulAssignment","src":"1738:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1750:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1761:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1746:3:6"},"nodeType":"YulFunctionCall","src":"1746:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1738:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1580:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1594:4:6","type":""}],"src":"1429:341:6"},{"body":{"nodeType":"YulBlock","src":"1949:163:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1966:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1977:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1959:6:6"},"nodeType":"YulFunctionCall","src":"1959:21:6"},"nodeType":"YulExpressionStatement","src":"1959:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2011:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1996:3:6"},"nodeType":"YulFunctionCall","src":"1996:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"2016:2:6","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1989:6:6"},"nodeType":"YulFunctionCall","src":"1989:30:6"},"nodeType":"YulExpressionStatement","src":"1989:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2039:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2050:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2035:3:6"},"nodeType":"YulFunctionCall","src":"2035:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"2055:15:6","type":"","value":"Not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2028:6:6"},"nodeType":"YulFunctionCall","src":"2028:43:6"},"nodeType":"YulExpressionStatement","src":"2028:43:6"},{"nodeType":"YulAssignment","src":"2080:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2092:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2103:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2088:3:6"},"nodeType":"YulFunctionCall","src":"2088:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2080:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1926:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1940:4:6","type":""}],"src":"1775:337:6"},{"body":{"nodeType":"YulBlock","src":"2291:164:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2308:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2319:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2301:6:6"},"nodeType":"YulFunctionCall","src":"2301:21:6"},"nodeType":"YulExpressionStatement","src":"2301:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2342:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2353:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2338:3:6"},"nodeType":"YulFunctionCall","src":"2338:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"2358:2:6","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2331:6:6"},"nodeType":"YulFunctionCall","src":"2331:30:6"},"nodeType":"YulExpressionStatement","src":"2331:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2381:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2392:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2377:3:6"},"nodeType":"YulFunctionCall","src":"2377:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"2397:16:6","type":"","value":"No stake found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2370:6:6"},"nodeType":"YulFunctionCall","src":"2370:44:6"},"nodeType":"YulExpressionStatement","src":"2370:44:6"},{"nodeType":"YulAssignment","src":"2423:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2435:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2446:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2431:3:6"},"nodeType":"YulFunctionCall","src":"2431:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2423:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2268:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2282:4:6","type":""}],"src":"2117:338:6"},{"body":{"nodeType":"YulBlock","src":"2634:225:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2651:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2662:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2644:6:6"},"nodeType":"YulFunctionCall","src":"2644:21:6"},"nodeType":"YulExpressionStatement","src":"2644:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2685:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2696:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2681:3:6"},"nodeType":"YulFunctionCall","src":"2681:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"2701:2:6","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2674:6:6"},"nodeType":"YulFunctionCall","src":"2674:30:6"},"nodeType":"YulExpressionStatement","src":"2674:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2724:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2735:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2720:3:6"},"nodeType":"YulFunctionCall","src":"2720:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"2740:34:6","type":"","value":"Stake amount must be greater tha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2713:6:6"},"nodeType":"YulFunctionCall","src":"2713:62:6"},"nodeType":"YulExpressionStatement","src":"2713:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2795:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2806:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2791:3:6"},"nodeType":"YulFunctionCall","src":"2791:18:6"},{"kind":"string","nodeType":"YulLiteral","src":"2811:5:6","type":"","value":"n 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2784:6:6"},"nodeType":"YulFunctionCall","src":"2784:33:6"},"nodeType":"YulExpressionStatement","src":"2784:33:6"},{"nodeType":"YulAssignment","src":"2826:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2838:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2849:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2834:3:6"},"nodeType":"YulFunctionCall","src":"2834:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2826:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2611:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2625:4:6","type":""}],"src":"2460:399:6"},{"body":{"nodeType":"YulBlock","src":"2965:76:6","statements":[{"nodeType":"YulAssignment","src":"2975:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2987:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2998:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2983:3:6"},"nodeType":"YulFunctionCall","src":"2983:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2975:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"3028:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3010:6:6"},"nodeType":"YulFunctionCall","src":"3010:25:6"},"nodeType":"YulExpressionStatement","src":"3010:25:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2934:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2945:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2956:4:6","type":""}],"src":"2864:177:6"},{"body":{"nodeType":"YulBlock","src":"3175:119:6","statements":[{"nodeType":"YulAssignment","src":"3185:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3197:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3208:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:6"},"nodeType":"YulFunctionCall","src":"3193:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3185:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3227:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"3238:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3220:6:6"},"nodeType":"YulFunctionCall","src":"3220:25:6"},"nodeType":"YulExpressionStatement","src":"3220:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3265:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3276:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3261:3:6"},"nodeType":"YulFunctionCall","src":"3261:18:6"},{"name":"value1","nodeType":"YulIdentifier","src":"3281:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3254:6:6"},"nodeType":"YulFunctionCall","src":"3254:34:6"},"nodeType":"YulExpressionStatement","src":"3254:34:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3136:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3147:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3155:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3166:4:6","type":""}],"src":"3046:248:6"},{"body":{"nodeType":"YulBlock","src":"3450:178:6","statements":[{"nodeType":"YulAssignment","src":"3460:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3472:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3483:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3468:3:6"},"nodeType":"YulFunctionCall","src":"3468:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3460:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3502:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3495:6:6"},"nodeType":"YulFunctionCall","src":"3495:25:6"},"nodeType":"YulExpressionStatement","src":"3495:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3551:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:6"},"nodeType":"YulFunctionCall","src":"3536:18:6"},{"name":"value1","nodeType":"YulIdentifier","src":"3556:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3529:6:6"},"nodeType":"YulFunctionCall","src":"3529:34:6"},"nodeType":"YulExpressionStatement","src":"3529:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3583:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3594:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3579:3:6"},"nodeType":"YulFunctionCall","src":"3579:18:6"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3613:6:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3606:6:6"},"nodeType":"YulFunctionCall","src":"3606:14:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3599:6:6"},"nodeType":"YulFunctionCall","src":"3599:22:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3572:6:6"},"nodeType":"YulFunctionCall","src":"3572:50:6"},"nodeType":"YulExpressionStatement","src":"3572:50:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3403:9:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3414:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3422:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3430:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3441:4:6","type":""}],"src":"3299:329:6"},{"body":{"nodeType":"YulBlock","src":"3681:80:6","statements":[{"body":{"nodeType":"YulBlock","src":"3708:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3710:16:6"},"nodeType":"YulFunctionCall","src":"3710:18:6"},"nodeType":"YulExpressionStatement","src":"3710:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3697:1:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3704:1:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3700:3:6"},"nodeType":"YulFunctionCall","src":"3700:6:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3694:2:6"},"nodeType":"YulFunctionCall","src":"3694:13:6"},"nodeType":"YulIf","src":"3691:2:6"},{"nodeType":"YulAssignment","src":"3739:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3750:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"3753:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3746:3:6"},"nodeType":"YulFunctionCall","src":"3746:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3739:3:6"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3664:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"3667:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3673:3:6","type":""}],"src":"3633:128:6"},{"body":{"nodeType":"YulBlock","src":"3812:171:6","statements":[{"body":{"nodeType":"YulBlock","src":"3843:111:6","statements":[{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"3864:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3871:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3876:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3867:3:6"},"nodeType":"YulFunctionCall","src":"3867:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3857:6:6"},"nodeType":"YulFunctionCall","src":"3857:31:6"},"nodeType":"YulExpressionStatement","src":"3857:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3908:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3911:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3901:6:6"},"nodeType":"YulFunctionCall","src":"3901:15:6"},"nodeType":"YulExpressionStatement","src":"3901:15:6"},{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"3936:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"3939:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3929:6:6"},"nodeType":"YulFunctionCall","src":"3929:15:6"},"nodeType":"YulExpressionStatement","src":"3929:15:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3832:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3825:6:6"},"nodeType":"YulFunctionCall","src":"3825:9:6"},"nodeType":"YulIf","src":"3822:2:6"},{"nodeType":"YulAssignment","src":"3963:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3972:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"3975:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3968:3:6"},"nodeType":"YulFunctionCall","src":"3968:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3963:1:6"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3797:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"3800:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3806:1:6","type":""}],"src":"3766:217:6"},{"body":{"nodeType":"YulBlock","src":"4040:116:6","statements":[{"body":{"nodeType":"YulBlock","src":"4099:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4101:16:6"},"nodeType":"YulFunctionCall","src":"4101:18:6"},"nodeType":"YulExpressionStatement","src":"4101:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4071:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4064:6:6"},"nodeType":"YulFunctionCall","src":"4064:9:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4057:6:6"},"nodeType":"YulFunctionCall","src":"4057:17:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4079:1:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4090:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4086:3:6"},"nodeType":"YulFunctionCall","src":"4086:6:6"},{"name":"x","nodeType":"YulIdentifier","src":"4094:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4082:3:6"},"nodeType":"YulFunctionCall","src":"4082:14:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4076:2:6"},"nodeType":"YulFunctionCall","src":"4076:21:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4053:3:6"},"nodeType":"YulFunctionCall","src":"4053:45:6"},"nodeType":"YulIf","src":"4050:2:6"},{"nodeType":"YulAssignment","src":"4130:20:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4145:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"4148:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4141:3:6"},"nodeType":"YulFunctionCall","src":"4141:9:6"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4130:7:6"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4019:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"4022:1:6","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"4028:7:6","type":""}],"src":"3988:168:6"},{"body":{"nodeType":"YulBlock","src":"4210:76:6","statements":[{"body":{"nodeType":"YulBlock","src":"4232:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4234:16:6"},"nodeType":"YulFunctionCall","src":"4234:18:6"},"nodeType":"YulExpressionStatement","src":"4234:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4226:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"4229:1:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4223:2:6"},"nodeType":"YulFunctionCall","src":"4223:8:6"},"nodeType":"YulIf","src":"4220:2:6"},{"nodeType":"YulAssignment","src":"4263:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4275:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"4278:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4271:3:6"},"nodeType":"YulFunctionCall","src":"4271:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4263:4:6"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4192:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"4195:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4201:4:6","type":""}],"src":"4161:125:6"},{"body":{"nodeType":"YulBlock","src":"4323:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4340:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4347:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4352:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4343:3:6"},"nodeType":"YulFunctionCall","src":"4343:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4333:6:6"},"nodeType":"YulFunctionCall","src":"4333:31:6"},"nodeType":"YulExpressionStatement","src":"4333:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4380:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4383:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4373:6:6"},"nodeType":"YulFunctionCall","src":"4373:15:6"},"nodeType":"YulExpressionStatement","src":"4373:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4404:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4407:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4397:6:6"},"nodeType":"YulFunctionCall","src":"4397:15:6"},"nodeType":"YulExpressionStatement","src":"4397:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4291:127:6"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_3a3a3ee7f4716cabe57160cf7f169bc773b09ae4a404f7930dddf07f03d5251c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Staking period not yet ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already staking\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Already withdrawn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No stake found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ccf0acbe0ec1aebb7a2dab1b0b802bcb7f895b4dfcacf69dba4f5ee3d39c1a30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Stake amount must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100955760003560e01c80639e447fc6116100595780639e447fc614610154578063bfab3db914610174578063c03d5b4714610189578063d21577f21461019e578063d82e3962146101a65761009c565b806316934fc4146100a15780633ccfd60b146100d95780637b0a47ee146100f05780638da5cb5b14610112578063957d7780146101345761009c565b3661009c57005b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461055c565b6101c6565b6040516100d0939291906106ea565b60405180910390f35b3480156100e557600080fd5b506100ee6101ea565b005b3480156100fc57600080fd5b50610105610317565b6040516100d091906106d3565b34801561011e57600080fd5b5061012761031d565b6040516100d091906105a2565b34801561014057600080fd5b506100ee61014f36600461058a565b61032c565b34801561016057600080fd5b506100ee61016f36600461058a565b61035b565b34801561018057600080fd5b506100ee61038a565b34801561019557600080fd5b506101056103f0565b6100ee6103f6565b3480156101b257600080fd5b506101056101c136600461055c565b6104ca565b60006020819052908152604090208054600182015460029092015490919060ff1683565b33600090815260208190526040902080546102205760405162461bcd60e51b815260040161021790610668565b60405180910390fd5b600281015460ff16156102455760405162461bcd60e51b815260040161021790610616565b60025481600101546102579190610702565b4210156102765760405162461bcd60e51b8152600401610217906105b6565b6000610281336104ca565b905060008183600001546102959190610702565b60028401805460ff19166001179055604051909150339082156108fc029083906000818181858888f193505050501580156102d4573d6000803e3d6000fd5b50825460405133917f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc69161030a919086906106dc565b60405180910390a2505050565b60015481565b6003546001600160a01b031681565b6003546001600160a01b031633146103565760405162461bcd60e51b815260040161021790610641565b600255565b6003546001600160a01b031633146103855760405162461bcd60e51b815260040161021790610641565b600155565b6003546001600160a01b031633146103b45760405162461bcd60e51b815260040161021790610641565b6003546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156103ed573d6000803e3d6000fd5b50565b60025481565b600034116104165760405162461bcd60e51b815260040161021790610690565b33600090815260208190526040902054156104435760405162461bcd60e51b8152600401610217906105ed565b604080516060810182523480825242602080840182815260008587018181523380835293829052908790209551865590516001860155516002909401805460ff191694151594909417909355925191927f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90926104c09291906106dc565b60405180910390a2565b6001600160a01b038116600090815260208190526040812080546105005760405162461bcd60e51b815260040161021790610668565b60008160010154426105129190610759565b9050600060025482106105545760025461052d90606461073a565b6001548454849161053d9161073a565b610547919061073a565b610551919061071a565b90505b949350505050565b60006020828403121561056d578081fd5b81356001600160a01b0381168114610583578182fd5b9392505050565b60006020828403121561059b578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6020808252601c908201527f5374616b696e6720706572696f64206e6f742079657420656e64656400000000604082015260600190565b6020808252600f908201526e416c7265616479207374616b696e6760881b604082015260600190565b60208082526011908201527020b63932b0b23c903bb4ba34323930bbb760791b604082015260600190565b6020808252600d908201526c2737ba103a34329037bbb732b960991b604082015260600190565b6020808252600e908201526d139bc81cdd185ad948199bdd5b9960921b604082015260600190565b60208082526023908201527f5374616b6520616d6f756e74206d75737420626520677265617465722074686160408201526206e20360ec1b606082015260800190565b90815260200190565b918252602082015260400190565b92835260208301919091521515604082015260600190565b6000821982111561071557610715610770565b500190565b60008261073557634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561075457610754610770565b500290565b60008282101561076b5761076b610770565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122066f3e068742c64b5aca9e7b5645c2f0b03d6c82152518ad737d00fa3f02b557b64736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E447FC6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xBFAB3DB9 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xC03D5B47 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xD21577F2 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x1A6 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x957D7780 EQ PUSH2 0x134 JUMPI PUSH2 0x9C JUMP JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x55C JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x1EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x6D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x5A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x38A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x3F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x55C JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x702 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281 CALLER PUSH2 0x4CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x702 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 SWAP2 PUSH2 0x30A SWAP2 SWAP1 DUP7 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x356 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x690 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x443 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLVALUE DUP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE PUSH1 0x0 DUP6 DUP8 ADD DUP2 DUP2 MSTORE CALLER DUP1 DUP4 MSTORE SWAP4 DUP3 SWAP1 MSTORE SWAP1 DUP8 SWAP1 KECCAK256 SWAP6 MLOAD DUP7 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP7 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP2 SWAP3 PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 SWAP3 PUSH2 0x4C0 SWAP3 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217 SWAP1 PUSH2 0x668 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x759 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 LT PUSH2 0x554 JUMPI PUSH1 0x2 SLOAD PUSH2 0x52D SWAP1 PUSH1 0x64 PUSH2 0x73A JUMP JUMPDEST PUSH1 0x1 SLOAD DUP5 SLOAD DUP5 SWAP2 PUSH2 0x53D SWAP2 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x583 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E6720706572696F64206E6F742079657420656E64656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x416C7265616479207374616B696E67 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x20B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x79 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2737BA103A34329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BC81CDD185AD948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x715 JUMPI PUSH2 0x715 PUSH2 0x770 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x735 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x754 JUMPI PUSH2 0x754 PUSH2 0x770 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x76B JUMPI PUSH2 0x76B PUSH2 0x770 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xF3E068742C64B5 0xAC 0xA9 0xE7 0xB5 PUSH5 0x5C2F0B03D6 0xC8 0x21 MSTORE MLOAD DUP11 0xD7 CALLDATACOPY 0xD0 0xF LOG3 CREATE 0x2B SSTORE PUSH28 0x64736F6C634300080100330000000000000000000000000000000000 ","sourceMap":"57:2676:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;186:39;;;;;;;;;;-1:-1:-1;186:39:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1766:575;;;;;;;;;;;;;:::i;:::-;;231:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;296:20::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2580:116::-;;;;;;;;;;-1:-1:-1;2580:116:5;;;;;:::i;:::-;;:::i;2470:104::-;;;;;;;;;;-1:-1:-1;2470:104:5;;;;;:::i;:::-;;:::i;2347:117::-;;;;;;;;;;;;;:::i;262:28::-;;;;;;;;;;;;;:::i;891:397::-;;;:::i;1294:466::-;;;;;;;;;;-1:-1:-1;1294:466:5;;;;;:::i;:::-;;:::i;186:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1766:575::-;1838:10;1805:23;1831:18;;;;;;;;;;1867:16;;1859:47;;;;-1:-1:-1;;;1859:47:5;;;;;;;:::i;:::-;;;;;;;;;1925:19;;;;;;1924:20;1916:50;;;;-1:-1:-1;;;1916:50:5;;;;;;;:::i;:::-;2025:13;;2003:9;:19;;;:35;;;;:::i;:::-;1984:15;:54;;1976:95;;;;-1:-1:-1;;;1976:95:5;;;;;;;:::i;:::-;2082:14;2099:27;2115:10;2099:15;:27::i;:::-;2082:44;;2136:19;2177:6;2158:9;:16;;;:25;;;;:::i;:::-;2194:19;;;:26;;-1:-1:-1;;2194:26:5;2216:4;2194:26;;;2230:41;;2136:47;;-1:-1:-1;2238:10:5;;2230:41;;;;;2136:47;;2194:19;2230:41;2194:19;2230:41;2136:47;2238:10;2230:41;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2309:16:5;;2287:47;;2297:10;;2287:47;;;;2309:16;2327:6;;2287:47;:::i;:::-;;;;;;;;1766:575;;;:::o;231:25::-;;;;:::o;296:20::-;;;-1:-1:-1;;;;;296:20:5;;:::o;2580:116::-;376:5;;-1:-1:-1;;;;;376:5:5;362:10;:19;354:45;;;;-1:-1:-1;;;354:45:5;;;;;;;:::i;:::-;2659:13:::1;:30:::0;2580:116::o;2470:104::-;376:5;;-1:-1:-1;;;;;376:5:5;362:10;:19;354:45;;;;-1:-1:-1;;;354:45:5;;;;;;;:::i;:::-;2543:10:::1;:24:::0;2470:104::o;2347:117::-;376:5;;-1:-1:-1;;;;;376:5:5;362:10;:19;354:45;;;;-1:-1:-1;;;354:45:5;;;;;;;:::i;:::-;2419:5:::1;::::0;2411:46:::1;::::0;-1:-1:-1;;;;;2419:5:5;;::::1;::::0;2435:21:::1;2411:46:::0;::::1;;;::::0;2419:5:::1;2411:46:::0;2419:5;2411:46;2435:21;2419:5;2411:46;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2347:117::o:0;262:28::-;;;;:::o;891:397::-;960:1;948:9;:13;940:61;;;;-1:-1:-1;;;940:61:5;;;;;;;:::i;:::-;1026:10;1019:6;:18;;;;;;;;;;:25;:30;1011:58;;;;-1:-1:-1;;;1011:58:5;;;;;;;:::i;:::-;1101:118;;;;;;;;1129:9;1101:118;;;1163:15;1101:118;;;;;;;-1:-1:-1;1101:118:5;;;;;;1087:10;1080:18;;;;;;;;;;;:139;;;;;;1101:118;1080:139;;;;;;;;;;-1:-1:-1;;1080:139:5;;;;;;;;;;;1235:46;;1087:10;;1235:46;;;;1129:9;1163:15;1235:46;:::i;:::-;;;;;;;;891:397::o;1294:466::-;-1:-1:-1;;;;;1401:14:5;;1356:7;1401:14;;;;;;;;;;1433:16;;1425:47;;;;-1:-1:-1;;;1425:47:5;;;;;;;:::i;:::-;1483:23;1527:9;:19;;;1509:15;:37;;;;:::i;:::-;1483:63;;1556:14;1608:13;;1589:15;:32;1585:145;;1699:13;;:19;;1715:3;1699:19;:::i;:::-;1666:10;;1647:16;;1679:15;;1647:29;;;:::i;:::-;:47;;;;:::i;:::-;1646:73;;;;:::i;:::-;1637:82;;1585:145;1747:6;1294:466;-1:-1:-1;;;;1294:466:5:o;14:306:6:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:6;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:6:o;325:190::-;;437:2;425:9;416:7;412:23;408:32;405:2;;;458:6;450;443:22;405:2;-1:-1:-1;486:23:6;;395:120;-1:-1:-1;395:120:6:o;520:203::-;-1:-1:-1;;;;;684:32:6;;;;666:51;;654:2;639:18;;621:102::o;728:352::-;930:2;912:21;;;969:2;949:18;;;942:30;1008;1003:2;988:18;;981:58;1071:2;1056:18;;902:178::o;1085:339::-;1287:2;1269:21;;;1326:2;1306:18;;;1299:30;-1:-1:-1;;;1360:2:6;1345:18;;1338:45;1415:2;1400:18;;1259:165::o;1429:341::-;1631:2;1613:21;;;1670:2;1650:18;;;1643:30;-1:-1:-1;;;1704:2:6;1689:18;;1682:47;1761:2;1746:18;;1603:167::o;1775:337::-;1977:2;1959:21;;;2016:2;1996:18;;;1989:30;-1:-1:-1;;;2050:2:6;2035:18;;2028:43;2103:2;2088:18;;1949:163::o;2117:338::-;2319:2;2301:21;;;2358:2;2338:18;;;2331:30;-1:-1:-1;;;2392:2:6;2377:18;;2370:44;2446:2;2431:18;;2291:164::o;2460:399::-;2662:2;2644:21;;;2701:2;2681:18;;;2674:30;2740:34;2735:2;2720:18;;2713:62;-1:-1:-1;;;2806:2:6;2791:18;;2784:33;2849:3;2834:19;;2634:225::o;2864:177::-;3010:25;;;2998:2;2983:18;;2965:76::o;3046:248::-;3220:25;;;3276:2;3261:18;;3254:34;3208:2;3193:18;;3175:119::o;3299:329::-;3495:25;;;3551:2;3536:18;;3529:34;;;;3606:14;3599:22;3594:2;3579:18;;3572:50;3483:2;3468:18;;3450:178::o;3633:128::-;;3704:1;3700:6;3697:1;3694:13;3691:2;;;3710:18;;:::i;:::-;-1:-1:-1;3746:9:6;;3681:80::o;3766:217::-;;3832:1;3822:2;;-1:-1:-1;;;3857:31:6;;3911:4;3908:1;3901:15;3939:4;3864:1;3929:15;3822:2;-1:-1:-1;3968:9:6;;3812:171::o;3988:168::-;;4094:1;4090;4086:6;4082:14;4079:1;4076:21;4071:1;4064:9;4057:17;4053:45;4050:2;;;4101:18;;:::i;:::-;-1:-1:-1;4141:9:6;;4040:116::o;4161:125::-;;4229:1;4226;4223:8;4220:2;;;4234:18;;:::i;:::-;-1:-1:-1;4271:9:6;;4210:76::o;4291:127::-;4352:10;4347:3;4343:20;4340:1;4333:31;4383:4;4380:1;4373:15;4407:4;4404:1;4397:15"},"methodIdentifiers":{"calculateReward(address)":"d82e3962","owner()":"8da5cb5b","rewardRate()":"7b0a47ee","setRewardRate(uint256)":"9e447fc6","setStakingPeriod(uint256)":"957d7780","stakeEther()":"d21577f2","stakes(address)":"16934fc4","stakingPeriod()":"c03d5b47","withdraw()":"3ccfd60b","withdrawContractBalance()":"bfab3db9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakingPeriod\",\"type\":\"uint256\"}],\"name\":\"setStakingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawContractBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EthStaking.sol\":\"EtherStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/EthStaking.sol\":{\"keccak256\":\"0x9e92ec30801b4e403ffb93d65a7bc6f03143c04d24804dc4a16bece825657747\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://419f08a63d9f3e4595e1e649db38d9e3a8cbb7677aed07bb90390e355e88cc97\",\"dweb:/ipfs/QmXznmprn3ZJSSSQtPyisweGrBwDaia6VrwwroQwT78FdU\"]}},\"version\":1}"}}}}}